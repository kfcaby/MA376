model_quadratic = lm(SASIE_12 ~ Year12^2, data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ I(Year12^2), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ x + I(Year12^2), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year12 + I(Year12^2), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year_12 + I(Year12^2), data = ice)
summary(model_quadratic)
model_std.quadratic = lm(SASIE_12 ~ std.year + I(std.year^2), data = ice)
summary(model_quadratic)
summary(model_std.quadratic)
ice %>% left_join(model_std.quadratic %>% fortify())
model_std.quadratic %>% fortify()
ice %>% left_join(model_std.quadratic %>% fortify(), by = "SASIE_12")
ice
model_std.quadratic %>% fortify()
ice %>% left_join((model_std.quadratic %>% fortify()), by = "SASIE_12")
model_output = model_std.quadratic %>% fortify()
ice %>% left_join(model_output)
str(ice)
# Let's standardize year first
ice = ice %>% mutate(std.year = (Year12-mean(Year12))/sd(Year12))
# Let's standardize year first
ice = ice %>% mutate(std.year = (Year12-mean(Year12))/sd(Year12))
ice = read.table(file = "http://www.isi-stats.com/isi2/data/ArticSeaIce.txt",
header = T)
# Let's standardize year first
ice = ice %>% mutate(std.year = (Year12-mean(Year12))/sd(Year12))
ice %>% left_join(model_output)
ice = ice %>% left_join(model_std.quadratic %>% fortify())
ice %>% gglot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted))
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted))
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted), col = "red")
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted), col = "red") +
ylim(1978,2020)
ice = ice %>% left_join(model_std.quadratic %>% fortify())
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted), col = "red") +
ylim(1978,2020)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted), col = "red") +
ylim(0,8) +
xlim(1978,2020)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year_12 + I(Year12^2) + I(Year12^3), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year_12 + I(Year_12^2) + I(Year_12^3), data = ice)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year12 + I(Year12^2) + I(Year12^3), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year12 + I(Year12^2), data = ice)
summary(model_quadratic)
model_std.quadratic = lm(SASIE_12 ~ std.year + I(std.year^2) + I(std.year^3), data = ice)
summary(model_std.quadratic)
anova(model_interaction, model_linear)
anova(model_std.quadratic, model_linear)
summary(model_std.quadratic)
summary(model_std.quadratic)
model_std.quadratic = lm(SASIE_12 ~ std.year + I(std.year^2), data = ice)
anova(model_std.quadratic, model_linear)
x = seq(1,10,by = 0.1)
plot(x,df(x,1,100))
plot(x,df(x,3,100))
sd(ice$Year12)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T, sep = ",")
View(chips)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T, sep = "\t")
View(chips)
chips_long = chips %>% gather()
library(tidyverse)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T, sep = "\t")
chips_long = chips %>% gather()
View(chips_long)
chips_long = chips %>% gather(-student)
chips_long = chips %>% gather(key = "type", value = "melting.time", -student )
anova(chips_long)
contrasts(chips_long$student) = contr.sum
contrasts(chips_long$student) = contr.sum
contrasts(chips_long$type) = contr.sum
chips_long$type = factor(chips_long$type)
chips_long$type = factor(chips_long$type)
contrasts(chips_long$type) = contr.sum
model_indicator = lm(melting.time ~ student + type, data = chips)
model_indicator = lm(melting.time ~ student + type, data = chips_long)
summary(model_indicator)
anova(model_indicator)
contrasts(chips_long$student) = contr.sum
chips_long$type = factor(chips_long$type)
contrasts(chips_long$type) = contr.sum
model_effectEncode = lm(melting.time ~ student + type, data = chips_long)
summary(model_indicator)
anova(model_indicator)
summary(model_effectEncode)
anova(model_effectEncode)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T, sep = "\t")
chips_long = chips %>% gather(key = "type", value = "melting.time", -student )
model_indicator = lm(melting.time ~ student + type, data = chips_long)
summary(model_indicator)
anova(model_indicator)
contrasts(chips_long$student) = contr.sum
chips_long$type = factor(chips_long$type)
contrasts(chips_long$type) = contr.sum
model_effectEncode = lm(melting.time ~ student + type, data = chips_long)
summary(model_effectEncode)
anova(model_effectEncode)
berries = read.table(file = "http://www.isi-stats.com/isi2/data/StrawberryStorageRCBD.txt",
header = T)
View(berries)
model_berries = lm(Firmness ~ Storage + Variety, data = berries)
summary(model_berries)
anova(model_berries)
View(wages_whole)
model_AnxietySatisfaction = lm(satisfaction ~ anxiety, data = satisfaction)
model_AnxietyAgegroup = lm(satisfaction ~ anxiety + AgeGroup, data = satisfaction)
satisfaction = satisfaction %>% mutate(predicted = predict(model_AnxietySatisfaction, satisfaction))
satisfaction %>% ggplot(aes(x = age, y = satisfaction, color = anxiety)) + geom_point() + geom_line(aes(y =  ))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
satisfaction = read.table("http://www.isi-stats.com/isi2/data/patientSatisfaction.txt", header = T)
# Chunk 2
satisfaction %>% group_by(AgeGroup) %>% summarise(mean(satisfaction))
model_AgeGroup = lm(satisfaction ~ AgeGroup, data = satisfaction)
summary(model_AgeGroup)
# Chunk 3
anova(model_AgeGroup)
# Chunk 4
model_AnxietySatisfaction = lm(satisfaction ~ anxiety, data = satisfaction)
model_AnxietyAgegroup = lm(satisfaction ~ anxiety + AgeGroup, data = satisfaction)
satisfaction = satisfaction %>% mutate(predicted = predict(model_AnxietySatisfaction, satisfaction))
satisfaction %>% ggplot(aes(x = age, y = satisfaction, color = anxiety)) + geom_point() + geom_line(aes(y =  ))
predict(model_AnxietySatisfaction, satisfaction)
model_AnxietySatisfaction %>% fortify()
lm(satisfaction ~ anxiety + anxiety, data = satisfaction)
library(tidyverse)
redsox = read.table(file = "Red Sox Season", header = T)
setwd("./Chapter_6")
redsox = read.table(file = "Red Sox Season", header = T)
redsox = read_csv(file = "Red Sox Season")
View(redsox)
head(redsox)
library(tidyverse)
redsox = redsox %>% mutate(Result = str_sub(`W/L`,start = 1, end = 2))
redsox = redsox %>% mutate(Result = str_sub(`W/L`,start = 0, end = 1))
redsox = redsox %>% mutate(`Home/Away` = ifelse(X5 == "@", "Away", "Home"))
redsox = redsox %>% mutate(`Home/Away` = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
redsox = read_csv(file = "Red Sox Season")
redsox = redsox %>% mutate(Result = str_sub(`W/L`,start = 0, end = 1))
redsox = redsox %>% mutate(`Home/Away` = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
head(redsox %>% select(`Gm#`,Tm,Opp,Result, `Home/Away`))
redsox %>% group_by(`Home/Away`) %>% count(Result)
redsox %>% group_by(`Home/Away`) %>% count(Result) %>% spread()
redsox %>% group_by(`Home/Away`) %>% count(Result) %>% spread(`Home/Away`,Result)
redsox %>% group_by(`Home/Away`) %>% count(Result) %>% spread(key = `Home/Away`, value = n)
summary = redsox %>%
group_by(`Home/Away`)%>%
count(Result) %>%
spread(key = `Home/Away`, value = n)
library(knitr)
redsox = redsox %>% mutate(Result = factor(str_sub(`W/L`,start = 0, end = 1),
levels = c("W","L")))
redsox = redsox %>% mutate(`Home/Away` = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
summary = redsox %>%
group_by(`Home/Away`)%>%
count(Result) %>%
spread(key = `Home/Away`, value = n)
kable(summary, caption)
kable(summary, caption = "Results of the Red Sox 2018 Season")
57/81 - 51/81
(57/81)/(51/81)
phat = 108/162
z = (phat_home - phat_away)/sqrt(phat*(1-phat)*(1/81 + 1/81))
# two-sample z-test
phat_home = 57/81
phat_away = 51/81
phat = 108/162
z = (phat_home - phat_away)/sqrt(phat*(1-phat)*(1/81 + 1/81))
phat*(1-phat)*(1/81 + 1/81)
phat_home - phat_away
sqrt(phat*(1-phat)*(1/81 + 1/81))
1-pnorm(z,0,1)
#p-value
2*(1-pnorm(z,0,1))
prop.test(x = c(57,51), n = c(81,81))
#p-value
2*(1-pnorm(z,0,1))
redsox.sim = redsox %>% select(Result, `Home/Away`)
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>%
group_by(`Home/Away`) %>%
count(Result.sim)
View(summary.sim)
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>%
group_by(`Home/Away`) %>%
count(Result.sim) %>% summarise(p = n/sum(n))
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>%
group_by(`Home/Away`) %>%
count(Result.sim) %>% mutate(p = n/sum(n))
View(summary.sim)
summary.sim$p[3]-summary.sim$p[1]
for(i in 1:n.sims){
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>% #shuffle wins
group_by(`Home/Away`) %>%
count(Result.sim) %>% mutate(p = n/sum(n)) #calculate win percentages
riskDiff.sim[i] = summary.sim$p[3]-summary.sim$p[1]
}
redsox.sim = redsox %>% select(Result, `Home/Away`)
riskDiff.sim = c()
n.sims = 5000
for(i in 1:n.sims){
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>% #shuffle wins
group_by(`Home/Away`) %>%
count(Result.sim) %>% mutate(p = n/sum(n)) #calculate win percentages
riskDiff.sim[i] = summary.sim$p[3]-summary.sim$p[1]
}
hist(riskDiff.sim)
sum(phat_home - phat_away > abs(riskDiff.sim))
sum(phat_home - phat_away > abs(riskDiff.sim))/n.sim
sum(phat_home - phat_away > abs(riskDiff.sim))/n.sims
phat_home - phat_away
redsox.sim = redsox %>% select(Result, `Home/Away`)
riskDiff.sim = c()
n.sims = 5000
for(i in 1:n.sims){
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>% #shuffle wins
group_by(`Home/Away`) %>%
count(Result.sim) %>% mutate(p = n/sum(n)) #calculate win percentages
riskDiff.sim[i] = summary.sim$p[3]-summary.sim$p[1]
}
hist(riskDiff.sim)
sum(phat_home - phat_away > abs(riskDiff.sim))/n.sims
```
sum( (phat_home - phat_away) > abs(riskDiff.sim))/n.sims
sum( abs(riskDiff.sim) > (phat_home - phat_away))/n.sims
#p-value
2*(1-pnorm(z,0,1))
1-pnorm(z,0,1)
#p-value
2*(1-pnorm(z,0,1))
sum( abs(riskDiff.sim) > (phat_home - phat_away))/n.sims
redsox %>% group_by(`Home/Away`, Opp) %>% count()
redsox %>% group_by(Opp,`Home/Away`) %>% count()
measures = data.frame(prob = seq(0,1, by = 0.1))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
measures = data.frame(prob = seq(0,1, by = 0.01))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
measures = data.frame(prob = seq(0,1, by = 0.05))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
prop.test(x = c(57,51), n = c(81,81))
sum( abs(riskDiff.sim) > (phat_home - phat_away))/n.sims
#p-value
2*(1-pnorm(z,0,1))
57/81
phat_away = 51/81
#standardized statistic (pg 420)
z = (phat_home - phat_away)/sqrt(phat*(1-phat)*(1/81 + 1/81))
#p-value
2*(1-pnorm(z,0,1))
kable(summary, caption = "Results of the Red Sox 2018 Season")
View(summary)
redsox %>% group_by(`Home/Away`,Result) %>% count()
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
group_by(Result) %>% mutate(expected_per = n/sum(n))
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
group_by(`Home/Away`) %>% mutate(expected_per = n/sum(n))
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
group_by() %>% mutate(expected_per = n/sum(n))
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
group_by(Result) %>% mutate(expected_per = n/sum(n))
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
group_by() %>%group_by(Result) %>% mutate(expected_per = n/sum(n))
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
group_by(Result) %>% mutate(expected_per = n/sum(n))
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
mutate(expected_per = n/sum(n))
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
mutate(expected_per = n/sum(n))
redsox %>% group_by(`Home/Away`,Result) %>% count() %>%
group_by(Result) %>% mutate(expected_per = n/sum(n))
redsox %>%
group_by(`Home/Away`,Result) %>%
count() %>%
group_by(Result) %>%
mutate(expected_per = sum(n))
redsox %>%
group_by(`Home/Away`,Result) %>%
count() %>%
group_by() %>%
mutate(expected_per = sum(n))
redsox %>%
group_by(`Home/Away`,Result) %>%
count() %>%
group_by(`Home/Away`)
redsox %>%
group_by(`Home/Away`,Result) %>%
count() %>%
group_by(`Home/Away`) %>%
mutate(n.games = sum(n))
redsox %>%
group_by(`Home/Away`,Result) %>%
count() %>%
group_by(`Home/Away`) %>%
mutate(n.games = sum(n)) %>%
group_by(Result) %>%
mutate(overall_perc = n/sum(n))
redsox %>%
group_by(`Home/Away`,Result) %>%
count() %>%
group_by(`Home/Away`) %>%
mutate(n.games = sum(n)) %>%
group_by() %>%
group_by(Result) %>%
mutate(overall_perc = n/sum(n))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
redsox = read_csv(file = "Red Sox Season")
redsox = redsox %>% mutate(Result = factor(str_sub(`W/L`,start = 0, end = 1),
levels = c("W","L")))
redsox = redsox %>% mutate(Field = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
# Chunk 2
head(redsox %>% select(`Gm#`,Tm,Opp,Result, Field))
summary = redsox %>%
group_by(Field)%>%
count(Result) %>%
spread(key = Field, value = n)
kable(summary, caption = "Results of the Red Sox 2018 Season")
# Chunk 3
measures = data.frame(prob = seq(0,1, by = 0.05))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
phat_home = 57/81
phat_away = 51/81
phat = 108/162
#standardized statistic (pg 420)
z = (phat_home - phat_away)/sqrt(phat*(1-phat)*(1/81 + 1/81))
#p-value
2*(1-pnorm(z,0,1))
z
summary_overall = redsox %>% group_by(Result) %>%
count() %>% group_by() %>% mutate(perc = n/sum(n)) %>%
select(-n)
#calculate expected wins
summary_homeaway = redsox %>%
group_by(Field,Result) %>%
count() %>%
left_join(summary_overall, by = "Result") %>%
group_by(Field) %>%
mutate(expected = perc*sum(n))
summary_homeaway
#calculate chi-square statistic
chisq = summary_homeaway %>% group_by() %>%
summarise(chisq = sum((n - expected)^2/expected))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
redsox = read_csv(file = "Red Sox Season")
redsox = redsox %>% mutate(Result = factor(str_sub(`W/L`,start = 0, end = 1),
levels = c("W","L")))
redsox = redsox %>% mutate(Field = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
# Chunk 2
head(redsox %>% select(`Gm#`,Tm,Opp,Result, Field))
summary = redsox %>%
group_by(Field)%>%
count(Result) %>%
spread(key = Field, value = n)
kable(summary, caption = "Results of the Red Sox 2018 Season")
# Chunk 3
measures = data.frame(prob = seq(0,1, by = 0.05))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
# Chunk 4
# two-sample z-test
phat_home = 57/81
phat_away = 51/81
phat = 108/162
#standardized statistic (pg 420)
z = (phat_home - phat_away)/sqrt(phat*(1-phat)*(1/81 + 1/81))
#p-value
2*(1-pnorm(z,0,1))
setwd("./Chapter_6/")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
redsox = read_csv(file = "Red Sox Season")
redsox = redsox %>% mutate(Result = factor(str_sub(`W/L`,start = 0, end = 1),
levels = c("W","L")))
redsox = redsox %>% mutate(Field = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
# Chunk 2
head(redsox %>% select(`Gm#`,Tm,Opp,Result, Field))
summary = redsox %>%
group_by(Field)%>%
count(Result) %>%
spread(key = Field, value = n)
kable(summary, caption = "Results of the Red Sox 2018 Season")
# Chunk 3
measures = data.frame(prob = seq(0,1, by = 0.05))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
# Chunk 4
# two-sample z-test
phat_home = 57/81
phat_away = 51/81
phat = 108/162
#standardized statistic (pg 420)
z = (phat_home - phat_away)/sqrt(phat*(1-phat)*(1/81 + 1/81))
#p-value
2*(1-pnorm(z,0,1))
#calculate overall win/loss percentage
summary_overall = redsox %>% group_by(Result) %>%
count() %>% group_by() %>% mutate(perc = n/sum(n)) %>%
select(-n)
#calculate expected wins
summary_homeaway = redsox %>%
group_by(Field,Result) %>%
count() %>%
left_join(summary_overall, by = "Result") %>%
group_by(Field) %>%
mutate(expected = perc*sum(n))
summary_homeaway
#calculate chi-square statistic
chisq = summary_homeaway %>% group_by() %>%
summarise(chisq = sum((n - expected)^2/expected))
1- pchisq(chisq$chisq, 1)
chisq
1- pchisq(chisq$chisq, 1)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(tidyverse)
teens = read.table(file = "http://www.isi-stats.com/isi2/data/FEV.txt",
header = T)
teens$Smoker = factor(teens$Smoker) #convert quantitative variable to categorical
head(teens)
# Chunk 3
teens %>% ggplot(aes(x = Smoker, y = FEV)) + geom_boxplot()
# Chunk 4
model_smoker = lm(FEV ~ Smoker, data = teens)
summary(model_smoker)
# Chunk 5
library(gridExtra)
p1 = teens %>% ggplot(aes(x = Smoker, y = Age)) + geom_boxplot()
p2 = teens %>% ggplot(aes(x = Age, y = FEV)) + geom_point()
grid.arrange(p1,p2, ncol = 2)
# Chunk 6
model_smoker_age = lm(FEV ~ Smoker + Age, data = teens)
summary(model_smoker_age)
# Chunk 7
model_smoker_age %>%
fortify() %>%
ggplot(aes(x = Age, y = FEV, color = Smoker)) +
geom_point() +
geom_line(aes(y = .fitted, color = Smoker))
View(teens)
model_gender(lm(FEV ~ Smoker + Age + Gender))
model_gender = lm(FEV ~ Smoker + Age + Gender, data = teens)
summary(model_gender)
teens = read.table(file = "http://www.isi-stats.com/isi2/data/FEV.txt",
header = T)
