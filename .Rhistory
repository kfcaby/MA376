anova(model2)
summary(model2)
names(summary(model2))
summary(model2)$sigma
odor
odor %>% group_by(condition) %>% summarise(mean(rating))
sim.dat = odor %>% mutate(sim.condition =
sample(condition))
sim.dat
sim.dat = odor %>% mutate(sim.condition =
sample(condition))
sim.dat
sim.scent = odor %>% filter(sim.condition = "scent")
sim.scent = sim.dat %>% filter(sim.condition = "scent")
sim.scent = sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff = mean(sim.scent$rating) - mean(sim.noscent$rating)
sim.diff
sim.diff = c()
m = 10000 #number of simulations
for(i in 1:m){
sim.dat = odor %>% mutate(sim.condition =
sample(condition))
sim.scent = sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff[i] = mean(sim.scent$rating) - mean(sim.noscent$rating)
}
sim.diff
hist(sim.diff)
hist(sim.diff, breaks = 100)
hist(odor$rating)
hist(odor$rating, breaks =10)
hist(sim.diff, breaks = 100)
sum(sim.diff > 1.3)/m
#inference on R^2
model = lm(rating ~ sim.condition, data = sim.dat)
summay(model)
summary(model)
names(summary(model))
sim.diff = c()
r.squared = c()
m = 10000 #number of simulations
for(i in 1:m){
sim.dat = odor %>% mutate(sim.condition =
sample(condition))
sim.scent = sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff[i] = mean(sim.scent$rating) - mean(sim.noscent$rating)
#inference on R^2
model = lm(rating ~ sim.condition, data = sim.dat)
r.squared[i] = summary(model)$r.squared
}
summary(model)
summary(model)$r.squared
(0.1)*0.3/(0.1*0.3 + 0.6*0.7)
32*.688
prop.test(x = 22,n = 32, p = 0.5)
prop.test(x = 22,n = 32, p = 0.5, alternative = "greater")
prop.test(x = 22,n = 32, p = 0.5)
prop.test(x = 22,n = 32, p = 0.5, correct = FALSE)
prop.test(x = 22,n = 32, p = 0.5)
prop.test(x = 23,n = 32, p = 0.5)
prop.test(x = 22,n = 32, p = 0.5)
prop.test(x = 22,n = 32, p = 0.5, alternative = "greater")
prop.test(x = 22,n = 32, p = 0.5, alternative = "greater", correct = FALSE)
prop.test(x = 22,n = 32, p = 0.5,  correct = FALSE)
#x is the number of successes
#n is the number of trials
#p is the null probability
prop.test(x = 22, n = 32, p = 0.5, alternative = "two.sided", correct = FALSE)
#x is the number of successes
#n is the number of trials
#p is the null probability
prop.test(x = 63, n = 100, p = 0.5, alternative = "two.sided", correct = FALSE)
libary(tidyverse)
fish = read_csv(file = "FishOmega3.txt")
library(tidyverse)
fish = read_csv(file = "FishOmega3.txt")
setwd("./Omega3/")
fish = read_csv(file = "FishOmega3.txt")
fish = read.table(file = "FishOmega3.txt")
fish = read_csv(file = "FishOmega3.txt")
fish = read_csv(file = "FishOmega3.txt", delim = "\t")
omega.dat<-read.table('http://www.isi-stats.com/isi2/data/FishOmega3.txt',sep= "\t")
omega.dat
fish = read_csv(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt")
fish = read_csv(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
delim = "\t")
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt")
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t")
View(fish)
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
#descriptive statistics
fish %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
fish %>% ggplot(aes(y = omega.3)) + geom_boxplot()
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
fish = fish %>% filter(omega.3 < 0.08)
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
fish = fish %>% mutate(mean1 = mean(omega.3))
SST = sum((fish$omega.3-fish$mean1)^2)
write_csv(fish, "fish_backup.csv")
read_csv(file = "fish_backup.csv")
library(tidyverse)
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
fish %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
fish %>% ggplot(aes(y = omega.3)) + geom_boxplot()
fish = fish %>% filter(omega.3 < 0.08)
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
fish = fish %>% mutate(mean1 = mean(omega.3))
SST = sum((fish$omega.3-fish$mean1)^2)
fish = fish %>% group_by(fish) %>% mutate(mean2 = mean(omega.3))
View(fish)
#SSE
SSE = sum((fish$omega.3 - fish$mean2)^2)
#SSR
SSR = SST - SSE
#R^2
R2 = SSR/SST
model = lm(omega.3 ~ fish, data = fish)
anova(model)
fish.sim = fish %>% mutate(sample(fish))
fish.sim = fish.sim %>% group_by(fish) %>% mutate(mean2.sim = mean(omega.3))
View(fish.sim)
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
fish %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
fish %>% ggplot(aes(y = omega.3)) + geom_boxplot()
fish = fish %>% filter(omega.3 < 0.08)
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
fish = fish %>% mutate(mean1 = mean(omega.3))
SST = sum((fish$omega.3-fish$mean1)^2)
fish = fish %>% group_by(fish) %>% mutate(mean2 = mean(omega.3))
#SSE
SSE = sum((fish$omega.3 - fish$mean2)^2)
#SSR
SSR = SST - SSE
#R^2
R2 = SSR/SST
model = lm(omega.3 ~ fish, data = fish)
anova(model)
m = 5000
rsquared = c()
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
rsquared = 1-SSE/SST
rsquared = 1-SSE.sim/SST
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
rsquared = 1-SSE.sim/SST
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
rsquared = 1-SSE.sim/SST
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
rsquared = 1-SSE.sim/SST
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish %>% mutate(fish.sim = sample(fish$fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
diet %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
diet %>% ggplot(aes(y = omega.3)) + geom_boxplot()
diet = diet %>% filter(omega.3 < 0.08)
diet %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
library(tidyverse)
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
#descriptive statistics
diet %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
diet %>% ggplot(aes(y = omega.3)) + geom_boxplot()
diet = diet %>% filter(omega.3 < 0.08)
diet %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
diet = diet %>% mutate(mean1 = mean(omega.3))
SST = sum((diet$omega.3-diet$mean1)^2)
diet = diet %>% group_by(fish) %>% mutate(mean2 = mean(omega.3))
#SSE
SSE = sum((diet$omega.3 - diet$mean2)^2)
#SSR
SSR = SST - SSE
#R^2
R2 = SSR/SST
model = lm(omega.3 ~ fish, data = diet)
anova(model)
m = 5000
rsquared = c()
diet.sim = diet %>% mutate(fish.sim = sample(fish))
View(diet.sim)
diet.sim = diet %>% mutate(fish.sim = sample(fish))
diet.sim = diet.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
sample(diet$fish)
diet %>% mutate(fish.sim = sample(fish))
sim.diet = diet %>% mutate(sim.fish = sample(fish))
View(sim.diet)
sim.diet = diet %>% mutate(sim.fish = sample(fish, replace = FALSE))
sample(diet$fish)
diet$sim.fish = sample(diet$fish)
View(diet)
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2)
rsquared = 1-SSE.sim/SST
for(i in 1:m){
diet$sim.fish = sample(diet$fish)
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2)
rsquared[i] = 1-SSE.sim/SST
}
hist(rsquared)
hist(rsquared, breaks)
hist(rsquared, breaks = 50)
sum(rsquared > R2)/m
plot(df(seq(0,0.6,0.01), 4, 22))
x = seq(0,0.6,0.01)
plot(x, df(x,4,22))
x = seq(0,0.6,0.01)
plot(x, df(x,4,22))
df(x,4,22)
plot(x, df(x,4,22))
anova(model)
#Fstat
Fstat = (SSR/4)/(SSE/22)
summary(model)
for(i in 1:m){
diet$sim.fish = sample(diet$fish)
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2)
rsquared[i] = 1-SSE.sim/SST
fstat.sim[i] = ((SST-SSE.sim)/4)/(SSE.sim/22)
}
fstat.sim = c()
for(i in 1:m){
diet$sim.fish = sample(diet$fish)
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2)
rsquared[i] = 1-SSE.sim/SST
fstat.sim[i] = ((SST-SSE.sim)/4)/(SSE.sim/22)
}
hist(fstat.sim)
x = seq(0,10,0.1)
plot(x, df(x,4,22))
plot(x, df(x,4,22), type = "l")
hist(fstat.sim)
plot(x, df(x,4,22), type = "l")
1 - pf(5.62, 4, 22)
summary(model)
1 - pf(5.62, 4, 22)
library(tidyverse)
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
diet = read_csv(file = "www.isi-stats.com/isi2/data/FishOmega3.txt")
library(tidyverse)
diet = read_csv(file = "www.isi-stats.com/isi2/data/FishOmega3.txt")
diet = read_csv(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt")
diet
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t")
View(diet)
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
View(diet)
#summary Statistics
diet %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
diet %>% ggplot(aes(y = omega.3)) + geom_boxplot()
diet %>% ggplot(aes(y = omega.3)) + geom_boxplot() +
theme_classic()
diet %>% ggplot(aes(X = fish,y = omega.3)) + geom_boxplot() +
theme_classic()
diet %>% ggplot(aes(x = fish,y = omega.3)) + geom_boxplot() +
theme_classic()
diet %>% ggplot(aes(y = fish,x = omega.3)) + geom_boxplot() +
theme_classic()
diet %>% ggplot(aes(x = fish,y = omega.3)) + geom_boxplot() +
theme_classic() + coord_flip()
diet %>% ggplot(aes(x = fish,y = omega.3)) + geom_boxplot() +
theme_classic() + coord_flip() + labs(title = "Test")
diet %>% ggplot(aes(x = fish,y = omega.3)) + geom_boxplot() +
theme_classic() + coord_flip() + labs(title = "Boxplot of Omega3 by fish consumption")
diet = diet %>% mutate(mean1 = mean(omega.3))
SST = sum((diet$omega.3 - diet$mean1)^2)
#Equivalent to single mean model
model_onemean = lm(omega.3 ~ 1, data = diet)
diet %>% ggplot(aes(x = fish,y = omega.3)) + geom_boxplot() +
theme_classic() +  labs(title = "Boxplot of Omega3 by fish consumption")
diet = diet %>% group_by(fish) %>% mutate(meanSep = mean(omega.3))
SSE = sum((diet$omega.3 - diet$meanSep)^2)
R2 = 1 - SSE/SST
library(tidyverse)
Replications = NULL
Num.Reps = 1000
72/500
1/6
Replications = NULL
Num.Reps = 1000
Sample.Size = 500
Null.Prob = 1/6
Sample.Stat = 72/500
for (i in 1:Num.Reps) {
Trials = sample(x = c(1, 0), size = Sample.Size, prob = c(Null.Prob, 1 -
Null.Prob), replace = TRUE)
Proportion = sum(Trials)/Sample.Size
Replications = rbind(Replications, data.frame(Proportion))
}
Replications %>% ggplot(aes(x = Proportion)) + geom_histogram(fill = "cadetblue",
color = "black") + labs(x = "Proportion of Success", y = "Count") + geom_vline(xintercept = Sample.Stat,
color = "red")
Replications
Replications$Proportion <= Sample.Stat
sum(Replications$Proportion <= Sample.Stat)
sum(Replications$Proportion <= Sample.Stat)/Num.Reps
mean(Replications$Proportion)
sd(Replications$Proportion)
(72/500 - 1/6)/0.016
prop.test(x = 72, n = 500, p = 1/6, alternative = "less",
correct = FALSE)
candidates = data.frame(Year = c(2016,2016),
District = c("Adams",
"Adams"),
Candidate = c("Clinton", "Trump"),
Votes = c(20,30))
View(candidates)
library(tidyverse)
candidates %>% spread(key = Candidate, value = Votes)
candidates = data.frame(Year = c(2016,2016,2016,2016),
District = c("Adams",
"Adams",
"Ashland",
"Ashland"),
Candidate = c("Clinton", "Trump",
"Clinton","Trump"),
Votes = c(20,30,40,35))
candidates %>% spread(key = Candidate, value = Votes)
candidate_long = candidates %>% spread(key = Candidate, value = Votes)
candidate_long %>% mutate(clintonPercent = Clinton/(Clinton + Trump)*100)
install.packages('fivethirtyeight')
library(fivethirtyeight)
tarantino
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
#descriptive statistics
diet %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
diet %>% ggplot(aes(y = omega.3)) + geom_boxplot()
diet = diet %>% filter(omega.3 < 0.08)
diet %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
diet = diet %>% mutate(mean1 = mean(omega.3))
SST = sum((diet$omega.3-diet$mean1)^2)
diet = diet %>% group_by(fish) %>% mutate(mean2 = mean(omega.3))
#SSE
SSE = sum((diet$omega.3 - diet$mean2)^2)
#SSR
SSR = SST - SSE
#R^2
R2 = SSR/SST
#Fstat
Fstat = (SSR/4)/(SSE/22)
model = lm(omega.3 ~ fish, data = diet)
anova(model)
summary(model)
model = lm(omega.3 ~ fish, data = diet)
anova(model)
aov(model)
pairwise.t.test(diet$omega.3, diet$fish)
summary = diet %>% group_by(fish) %>% summarise(mean(omega.3), sd(omega.3))
summary
summary = diet %>% group_by(fish) %>% summarise(mean(omega.3), sd(omega.3),n(
))
summary
(0.0404 - 0.377) - 2*(0.804 * sqrt(1/6 + 1/5))
(0.0404 - 0.377) - 2*(0.804 * sqrt(1/6 + 1/6))
(0.0404 - 0.377) + 2*(0.804 * sqrt(1/6 + 1/6))
install.packages('pairwiseCI')
library(pairwiseCI)
pairwiseCI(omega.3 ~ fish, data = diet)
pairwiseCI(omega.3 ~ fish, data = diet, pool.sd = TRUE)
pairwiseCI(omega.3 ~ fish, data = diet, pool.sd = TRUE, p.adjust.methods = "none")
qt(0.975,5)
qt(0.975,30)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
#descriptive statistics
diet %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
diet %>% ggplot(aes(y = omega.3)) + geom_boxplot()
diet = diet %>% filter(omega.3 < 0.08)
diet %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
diet = diet %>% mutate(mean1 = mean(omega.3))
SST = sum((diet$omega.3-diet$mean1)^2)
diet = diet %>% group_by(fish) %>% mutate(mean2 = mean(omega.3))
#SSE
SSE = sum((diet$omega.3 - diet$mean2)^2)
#SSR
SSR = SST - SSE
#R^2
R2 = SSR/SST
#Fstat
Fstat = (SSR/4)/(SSE/22)
#Question: when is the Fstat big?
model = lm(omega.3 ~ fish, data = diet)
anova(model)
summary(model)
model = lm(omega.3 ~ fish, data = diet)
anova(model)
m = 5000
rsquared = c() #vector for simulated R2
fstat.sim = c() #vector for simulated Fstat
#Simulation
for(i in 1:m){
diet$sim.fish = sample(diet$fish) #shuffle fish categories
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3)) #calculate new means
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2) #calculate new SSE
rsquared[i] = 1-SSE.sim/SST #calculate new R2; Question: why don't we calculate SST everytime
fstat.sim[i] = ((SST-SSE.sim)/4)/(SSE.sim/22) #calculate Fstat
}
#Calculate p-value for R2 = 0.51
hist(rsquared, breaks = 50)
sum(rsquared > R2)/m
#Calculate p-value for Fstat = 5.62
hist(fstat.sim)
SSE
summary = diet %>%group_by(fish) %>% summarise(mean = mean(omega.3),
sd = sd(omega.3),
n = n())
summary
View(diet)
summary = diet %>%group_by(fish) %>%
summarise(mean =mean(omega.3),
sd = sd(omega.3),
n = n(),
residuals2 = sum((omega.3-mean2)^2)
)
summary
summary %>% mutate(pooledSD = sqrt(sum(residuals2)/26))
summary = summary %>% mutate(pooledSD = sqrt(sum(residuals2)/26))
qt(0.975,n-1)
qt(0.975,5)
#calculate confidence interval
summary = summary %>% mutate(LB = mean - qt(0.975,n-1)*pooledSD)
summary
summary = summary %>% mutate(UB = mean + qt(0.975,n-1)*pooledSD)
summary
summary = summary %>% mutate(pooledSD = sqrt(sum(residuals2)/(27-5)))
#calculate confidence interval
summary = summary %>% mutate(LB = mean - qt(0.975,n-1)*pooledSD)
summary = summary %>% mutate(UB = mean + qt(0.975,n-1)*pooledSD)
summary
diet
#calculate confidence interval
summary = summary %>% mutate(LB = mean - qt(0.975,n-1)*pooledSD/sqrt(n))
summary = summary %>% mutate(UB = mean + qt(0.975,n-1)*pooledSD/sqrt(n))
summary
#calculate confidence interval
summary = summary %>% mutate(LB = mean - qt(0.975,26)*pooledSD/sqrt(n))
summary = summary %>% mutate(UB = mean + qt(0.975,26)*pooledSD/sqrt(n))
summary
#calculate confidence interval
summary = summary %>% mutate(LBmean = mean - qt(0.975,26)*pooledSD/sqrt(n))
summary = summary %>% mutate(UBmean = mean + qt(0.975,26)*pooledSD/sqrt(n))
#calculate prediction interval
summary = summary %>% mutate(LBprediction = mean - qt(0.975,26)*pooledSD*sqrt(1+1/n))
summary = summary %>% mutate(UBprediction = mean + qt(0.975,26)*pooledSD*sqrt(1+1/n))
summary
summary
power.t.test(n = 18, delta = 1, sd = 2, power = NULL, type = "one.sample", alternative = "two.sided")
power.t.test(n = NULL, delta = 1, sd = 2, power = 0.80, type = "one.sample", alternative = "two.sided")
install.packages('pwr')
library(pwr)
R2 = 0.1
#Cohen's f statistic
f = sqrt(R2/1-R2)
#Cohen's f statistic
f = sqrt(R2/(1-R2))
pwr.anova.test(k = 5, n = 10, f = f, power = NULL)
R2 = 0.3
#Cohen's f statistic
f = sqrt(R2/(1-R2))
pwr.anova.test(k = 5, n = 10, f = f, power = NULL)
pwr.anova.test(k = NULL, n = 10, f = f, power = 0.80)
