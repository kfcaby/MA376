geom_hline(yintercept = 120)
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = 0.1177)
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = 0.1177, intercept = 4.66)
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = 0.1177, intercept = 4.66))
model_Brainheight = lm(BrainSize ~ Height, data = brains)
summary_Brainheight = model_Brainheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(BrainSize_height_adj = mean(BrainSize) + summary_Brainheight$.resid)
#plots on page 382
p5 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + scale_color_distiller(palette = "Spectral", direction = 1)
p6 = brains %>% ggplot(aes(x = BrainSize_height_adj, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p5,p6,ncol = 2)
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = 0.1177, intercept = 4.66))
model_height_brainsize = lm(PIQ ~ BrainSize + Height, data = brains)
summary(model_height_brainsize)
brains = brains %>% mutate(std.BrainSize = scale(BrainSize))
brains = brains %>% mutate(std.Height = scale(Height))
brains = brains %>% mutate(std.Height = scale(Height))
brains = brains %>% mutate(std.BrainSize = scale(BrainSize),
std.Height = scale(Height))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(tidyverse)
brains = read.table(file = "http://www.isi-stats.com/isi2/data/BrainSize.txt",
header = T)
# Chunk 3
brains %>% ggplot(aes(x = BrainSize, y = PIQ)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
model_unadjusted = lm(PIQ ~ BrainSize, data = brains)
summary(model_unadjusted)
# Chunk 4
library(gridExtra)
p1 = brains %>% ggplot(aes(x = BrainSize, y = Height)) +
geom_point() + geom_smooth(method = "lm", se = F)
p2 = brains %>% ggplot(aes(x = Height, y = PIQ)) +
geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1,p2, ncol = 2)
# Chunk 5
model_PIQheight = lm(PIQ ~ Height, data = brains)
summary_PIQheight = model_PIQheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(PIQ_height_adj = mean(PIQ) + summary_PIQheight$.resid)
#plots on page 382
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) +
scale_color_distiller(palette = "Spectral", direction = 1)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +
scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p3,p4,ncol = 2)
# Chunk 6
model_Brainheight = lm(BrainSize ~ Height, data = brains)
summary_Brainheight = model_Brainheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(BrainSize_height_adj = mean(BrainSize) + summary_Brainheight$.resid)
#plots on page 382
p5 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + scale_color_distiller(palette = "Spectral", direction = 1)
p6 = brains %>% ggplot(aes(x = BrainSize_height_adj, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p5,p6,ncol = 2)
# Chunk 7
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = 0.1177, intercept = 4.66))
# Chunk 8
model_height_brainsize = lm(PIQ ~ BrainSize + Height, data = brains)
summary(model_height_brainsize)
# Chunk 9
brains = brains %>% mutate(std.BrainSize = scale(BrainSize),
std.Height = scale(Height))
model_interaction = lm(PIQ ~ std.BrainSize + std.Height)
model_interaction = lm(PIQ ~ std.BrainSize + std.Height,
data = brains)
summary(model_interaction)
model_interaction = lm(PIQ ~ std.BrainSize * std.Height,
data = brains)
summary(model_interaction)
sc = scale_color_distiller(palette = "Spectral", direction = 1)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + sc
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) + sc
grid.arrange(p3,p4,ncol = 2)
brains = read.table(file = "http://www.isi-stats.com/isi2/data/BrainSize.txt",
header = T)
model_PIQheight = lm(PIQ ~ Height, data = brains)
model_PIQheight %>% fortify()
library(tidyverse)
model_PIQheight %>% fortify()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Chunk 2
nuts = read.table(file = "http://www.isi-stats.com/isi2/data/pistachioStudy.txt",
header = T)
library(GGally)
library(plotly)
nuts %>% select(Temperature, AirVelocity, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
#nuts %>% plot_ly(x = ~Temperature, y = ~AirVelocity, z = ~Peroxide..remaining.)
# Chunk 3
model_TempVel = lm(Peroxide..remaining. ~ Temperature + AirVelocity, data = nuts)
summary(model_TempVel)
# Chunk 4
model_Temp = lm(Peroxide..remaining. ~ Temperature, data = nuts)
summary(model_Temp)
model_Vel = lm(Peroxide..remaining. ~ AirVelocity, data = nuts)
summary(model_Vel)
# Chunk 5
#In our data set, the variables are already standardized.
#If you needed to do it, you could use the scale function
#nuts = nuts %>% mutate(temp.std = scale(Temperature))
model_std = lm(Peroxide..remaining. ~ std.temp + std.air, data = nuts)
summary(model_std)
# Chunk 6
model_std %>%
fortify() %>%
ggplot(aes(x = .fitted, y = .resid, color = factor(std.temp))) +
geom_point()
# Chunk 7
nuts = nuts %>% mutate(interaction = std.temp * std.air)
nuts %>% select(std.temp, std.air, interaction, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
# Chunk 8
model_interaction = lm(Peroxide..remaining. ~ std.temp * std.air,
data = nuts)
summary(model_interaction)
# Chunk 9
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.temp, y = Peroxide..remaining., color = factor(std.air))) +
geom_point() +
geom_line(aes(y = .fitted, group = factor(std.air)))
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.air, y = Peroxide..remaining., color = factor(std.temp))) +
geom_point() +
geom_line(aes(y = .fitted, group = factor(std.temp)))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(tidyverse)
brains = read.table(file = "http://www.isi-stats.com/isi2/data/BrainSize.txt",
header = T)
# Chunk 3
brains %>% ggplot(aes(x = BrainSize, y = PIQ)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
model_unadjusted = lm(PIQ ~ BrainSize, data = brains)
summary(model_unadjusted)
# Chunk 4
library(gridExtra)
p1 = brains %>% ggplot(aes(x = BrainSize, y = Height)) +
geom_point() + geom_smooth(method = "lm", se = F)
p2 = brains %>% ggplot(aes(x = Height, y = PIQ)) +
geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1,p2, ncol = 2)
# Chunk 5
model_PIQheight = lm(PIQ ~ Height, data = brains)
summary_PIQheight = model_PIQheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(PIQ_height_adj = mean(PIQ) + summary_PIQheight$.resid)
#plots on page 382
# color scale
sc = scale_color_distiller(palette = "Spectral", direction = 1)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + sc
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) + sc
grid.arrange(p3,p4,ncol = 2)
# Chunk 6
model_Brainheight = lm(BrainSize ~ Height, data = brains)
summary_Brainheight = model_Brainheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(BrainSize_height_adj = mean(BrainSize) + summary_Brainheight$.resid)
#plots on page 382
p5 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + sc
p6 = brains %>%
ggplot(aes(x = BrainSize_height_adj, y = PIQ_height_adj, color = Height)) +
geom_point() +
ylim(65,155) +
sc
grid.arrange(p5,p6,ncol = 2)
# Chunk 7
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = 0.1177, intercept = 4.66))
# Chunk 8
model_height_brainsize = lm(PIQ ~ BrainSize + Height, data = brains)
summary(model_height_brainsize)
# Chunk 9
brains = brains %>% mutate(std.BrainSize = scale(BrainSize),
std.Height = scale(Height))
model_interaction = lm(PIQ ~ std.BrainSize * std.Height,
data = brains)
summary(model_interaction)
setwd("./IOCT/")
IOCT = read.table(file = "IOCT_Data_Cleaned.csv",
header - T)
IOCT = read.table(file = "IOCT_Data_Cleaned.csv",
header = T)
View(IOCT)
library(tidyverse)
IOCT = read_csv(file = "IOCT_Data_Cleaned.csv",
header = T)
IOCT = read_csv(file = "IOCT_Data_Cleaned.csv")
IOCT %>% ggplot(aes(x = APFT_Score, y = IOCT)) + geom_point()
IOCT %>% ggplot(aes(x = APFT_Score, y = IOCT_Time)) + geom_point()
IOCT %>% ggplot(aes(x = APFT_Score, y = IOCT_Time)) + geom_point() +
geom_smooth(method = lm(), se = F)
IOCT %>% ggplot(aes(x = APFT_Score, y = IOCT_Time)) + geom_point() +
geom_smooth(method = "lm", se = F)
dev.off()
IOCT %>% ggplot(aes(x = height, y = IOCT_Time)) + geom_point()
model = lm(IOCT ~ height, data = IOCT)
IOCT = read_csv(file = "IOCT_Data_Cleaned.csv")
IOCT %>% ggplot(aes(x = height, y = IOCT_Time)) + geom_point()
model = lm(IOCT ~ height, data = IOCT)
model = lm(IOCT_time ~ height, data = IOCT)
model = lm(IOCT_Time ~ height, data = IOCT)
summary(model)
IOCT %>% ggplot(aes(x = height)) + geom_histogram()
IOCT %>% ggplot(aes(x = height, y = IOCT_Time)) +
geom_point() +
geom_smooth(method = "lm", se = F)
(0.3957-0.3936)/((1-0.3957)/2830)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(tidyverse)
brains = read.table(file = "http://www.isi-stats.com/isi2/data/BrainSize.txt",
header = T)
# Chunk 3
brains %>% ggplot(aes(x = BrainSize, y = PIQ)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
model_unadjusted = lm(PIQ ~ BrainSize, data = brains)
summary(model_unadjusted)
# Chunk 4
library(gridExtra)
p1 = brains %>% ggplot(aes(x = BrainSize, y = Height)) +
geom_point() + geom_smooth(method = "lm", se = F)
p2 = brains %>% ggplot(aes(x = Height, y = PIQ)) +
geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1,p2, ncol = 2)
# Chunk 5
model_PIQheight = lm(PIQ ~ Height, data = brains)
summary_PIQheight = model_PIQheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(PIQ_height_adj = mean(PIQ) + summary_PIQheight$.resid)
#plots on page 382
# color scale
sc = scale_color_distiller(palette = "Spectral", direction = 1)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + sc
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) + sc
grid.arrange(p3,p4,ncol = 2)
# Chunk 6
model_Brainheight = lm(BrainSize ~ Height, data = brains)
summary_Brainheight = model_Brainheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(BrainSize_height_adj = mean(BrainSize) + summary_Brainheight$.resid)
#plots on page 382
p5 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + sc
p6 = brains %>%
ggplot(aes(x = BrainSize_height_adj, y = PIQ_height_adj, color = Height)) +
geom_point() +
ylim(65,155) +
sc
grid.arrange(p5,p6,ncol = 2)
# Chunk 7
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = 0.1177, intercept = 4.66))
# Chunk 8
model_height_brainsize = lm(PIQ ~ BrainSize + Height, data = brains)
summary(model_height_brainsize)
# Chunk 9
brains = brains %>% mutate(std.BrainSize = scale(BrainSize),
std.Height = scale(Height))
model_interaction = lm(PIQ ~ std.BrainSize * std.Height,
data = brains)
summary(model_interaction)
anova(model_height_brainsize,model_interaction)
summary(model_interaction)
model_std = lm(PIQ ~ std.Brainsize + std.Height, data= brains)
model_std = lm(PIQ ~ std.BrainSize + std.Height, data= brains)
anova(model_height_brainsize,model_interaction)
anova(model_height_brainsize,model_std)
anova(model_std,model_interaction)
summary(model_interaction)
(0.3957-0.3936)/((1-0.3957)/2830)
sqrt((0.3957-0.3936)/((1-0.3957)/2830))
1-pf(9.83,1,2830)
pt(-3.184,2830)
2*pt(-3.184,2830)
ice = read.table(file = "http://www.isi-stats.com/isi2/data/ArticSeaIce.txt",
header = T)
View(ice)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) + geom_point()
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm")
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() +
geom_smooth(method = "lm", se = F)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
ylim(0,8)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
ylim(0,8) +
xlim(1978, 2020)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() +
geom_smooth(method = "lm", se = F, fullrange = T) +
ylim(0,8) +
xlim(1978, 2020)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() +
geom_smooth(method = "lm", se = F, fullrange = T) +
geom_smooth(se = F, fullrange = T)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() +
geom_smooth(method = "lm", se = F, fullrange = T) +
geom_smooth(se = F, fullrange = T) +
ylim(0,8) +
xlim(1978, 2020)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() +
geom_smooth(method = "lm", se = F, fullrange = T) +
ylim(0,8) +
xlim(1978, 2020)
model_linear = lm(SASIE_12 ~ Year12, data = ice)
p2 = model_linear %>% fortify() %>%
ggplot(aes(x = .fitted, y = .resid))
library(gridExtra)
grid.arrange(p1,p2)
grid.arrange(p1,p2, ncol = 2)
model_linear %>% fortify()
p2 = model_linear %>% fortify() %>%
ggplot(aes(x = .fitted, y = .resid)) + geom_point()
grid.arrange(p1,p2, ncol = 2)
p2 = model_linear %>% fortify() %>%
ggplot(aes(x = .fitted, y = .resid)) + geom_point() +
geom_hline(yintercept = 0)
grid.arrange(p1,p2, ncol = 2)
p1 = ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() +
geom_smooth(method = "lm", se = F, fullrange = T) +
ylim(0,8) +
xlim(1978, 2020)
p2 = model_linear %>% fortify() %>%
ggplot(aes(x = .fitted, y = .resid)) + geom_point() +
geom_hline(yintercept = 0)
grid.arrange(p1,p2, ncol = 2)
library(tidyverse)
# standardize year
ice = ice %>% mutate(std.year = scale(Year12))
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year12^2, data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ I(Year12^2), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ x + I(Year12^2), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year12 + I(Year12^2), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year_12 + I(Year12^2), data = ice)
summary(model_quadratic)
model_std.quadratic = lm(SASIE_12 ~ std.year + I(std.year^2), data = ice)
summary(model_quadratic)
summary(model_std.quadratic)
ice %>% left_join(model_std.quadratic %>% fortify())
model_std.quadratic %>% fortify()
ice %>% left_join(model_std.quadratic %>% fortify(), by = "SASIE_12")
ice
model_std.quadratic %>% fortify()
ice %>% left_join((model_std.quadratic %>% fortify()), by = "SASIE_12")
model_output = model_std.quadratic %>% fortify()
ice %>% left_join(model_output)
str(ice)
# Let's standardize year first
ice = ice %>% mutate(std.year = (Year12-mean(Year12))/sd(Year12))
# Let's standardize year first
ice = ice %>% mutate(std.year = (Year12-mean(Year12))/sd(Year12))
ice = read.table(file = "http://www.isi-stats.com/isi2/data/ArticSeaIce.txt",
header = T)
# Let's standardize year first
ice = ice %>% mutate(std.year = (Year12-mean(Year12))/sd(Year12))
ice %>% left_join(model_output)
ice = ice %>% left_join(model_std.quadratic %>% fortify())
ice %>% gglot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted))
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted))
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted), col = "red")
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted), col = "red") +
ylim(1978,2020)
ice = ice %>% left_join(model_std.quadratic %>% fortify())
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted), col = "red") +
ylim(1978,2020)
ice %>% ggplot(aes(x = Year12, y = SASIE_12)) +
geom_point() + geom_smooth(method = "lm", se = F) +
geom_line(aes(y = .fitted), col = "red") +
ylim(0,8) +
xlim(1978,2020)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year_12 + I(Year12^2) + I(Year12^3), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year_12 + I(Year_12^2) + I(Year_12^3), data = ice)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year12 + I(Year12^2) + I(Year12^3), data = ice)
summary(model_quadratic)
# Let's try to fit the model
model_quadratic = lm(SASIE_12 ~ Year12 + I(Year12^2), data = ice)
summary(model_quadratic)
model_std.quadratic = lm(SASIE_12 ~ std.year + I(std.year^2) + I(std.year^3), data = ice)
summary(model_std.quadratic)
anova(model_interaction, model_linear)
anova(model_std.quadratic, model_linear)
summary(model_std.quadratic)
summary(model_std.quadratic)
model_std.quadratic = lm(SASIE_12 ~ std.year + I(std.year^2), data = ice)
anova(model_std.quadratic, model_linear)
x = seq(1,10,by = 0.1)
plot(x,df(x,1,100))
plot(x,df(x,3,100))
sd(ice$Year12)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T, sep = ",")
View(chips)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T, sep = "\t")
View(chips)
chips_long = chips %>% gather()
library(tidyverse)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T, sep = "\t")
chips_long = chips %>% gather()
View(chips_long)
chips_long = chips %>% gather(-student)
chips_long = chips %>% gather(key = "type", value = "melting.time", -student )
anova(chips_long)
contrasts(chips_long$student) = contr.sum
contrasts(chips_long$student) = contr.sum
contrasts(chips_long$type) = contr.sum
chips_long$type = factor(chips_long$type)
chips_long$type = factor(chips_long$type)
contrasts(chips_long$type) = contr.sum
model_indicator = lm(melting.time ~ student + type, data = chips)
model_indicator = lm(melting.time ~ student + type, data = chips_long)
summary(model_indicator)
anova(model_indicator)
contrasts(chips_long$student) = contr.sum
chips_long$type = factor(chips_long$type)
contrasts(chips_long$type) = contr.sum
model_effectEncode = lm(melting.time ~ student + type, data = chips_long)
summary(model_indicator)
anova(model_indicator)
summary(model_effectEncode)
anova(model_effectEncode)
chips = read.table(file = "http://www.isi-stats.com/isi2/data/MeltingTimes.txt",
header = T, sep = "\t")
chips_long = chips %>% gather(key = "type", value = "melting.time", -student )
model_indicator = lm(melting.time ~ student + type, data = chips_long)
summary(model_indicator)
anova(model_indicator)
contrasts(chips_long$student) = contr.sum
chips_long$type = factor(chips_long$type)
contrasts(chips_long$type) = contr.sum
model_effectEncode = lm(melting.time ~ student + type, data = chips_long)
summary(model_effectEncode)
anova(model_effectEncode)
berries = read.table(file = "http://www.isi-stats.com/isi2/data/StrawberryStorageRCBD.txt",
header = T)
View(berries)
model_berries = lm(Firmness ~ Storage + Variety, data = berries)
summary(model_berries)
anova(model_berries)
