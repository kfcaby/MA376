summary(omega.lm)
# Chunk 24
omega.lm %>% ggplot(aes(x=.fitted,y=.resid))+
geom_point()
# Chunk 25
fulldat.removed <- fulldat.mod %>% filter(omega.lm$residuals<10)
# Chunk 26
omega.mod.lm <- lm(Omega3~Age+Sex+Study,data=fulldat.removed)
summary(omega.mod.lm)
setwd("./Example7_1/")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE,fig.width=12, fig.height=6,fig.show = "hide")
library(tidyverse)
library(GGally)
library(boot)
options(tinytex.verbose = TRUE)
redsox = read_csv(file = "../Chapter_6/Red Sox Season")
redsox = redsox %>% mutate(Result = factor(str_sub(`W/L`,start = 0, end = 1),
levels = c("W","L")))
redsox = redsox %>% mutate(Field = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
redsox$Result = factor(redsox$Result,
levels = c("L","W"))
# Chunk 2
model = glm(Result ~ Field + Opp, data = redsox, family = "binomial")
summary(model)
# Chunk 3
framing.dat<-read.csv("FraminghamOmega3.csv")
head(framing.dat)
# Chunk 4
framing.dat <- framing.dat %>%
mutate(Omega3=Omega3...)%>%
select(-`Omega3...`)
# Chunk 5
mean(framing.dat$Omega3)
# Chunk 6
complete<-complete.cases(framing.dat)
sum(complete)
nrow(framing.dat)
# Chunk 7
fram.complete <- framing.dat %>% drop_na()
# Chunk 8
fram.mis<- framing.dat %>% filter(is.na(Omega3))
# Chunk 9
t.test(fram.complete$Age,fram.mis$Age)
# Chunk 10
screen.dat<-read.csv("ScreeningsOmega3.csv")
screen.dat <- screen.dat %>%
mutate(Omega3=Omega3...)%>%
select(-Omega3...)
head(screen.dat)
# Chunk 11
screen.full <- screen.dat %>% drop_na()
nrow(screen.dat)
nrow(screen.full)
# Chunk 12
screen.mis<- screen.dat %>% filter(is.na(Sex))
screen.mis %>% summarize(count=n(),mean.Omeg=mean(Omega3),sd.Omeg=sd(Omega3),mean.age=mean(Age),sd.age=sd(Age))
# Chunk 13
screen.full %>% summarize(count=n(),mean.Omeg=mean(Omega3),sd.Omeg=sd(Omega3),mean.age=mean(Age),sd.age=sd(Age))
# Chunk 14
screen.full%>%ggplot(aes(x=Omega3))+
geom_histogram()+
geom_rug(sides="b")
# Chunk 15
screen.full<- screen.full %>% mutate(Study="S")
fram.complete <- fram.complete %>% mutate(Study="F")
fulldat <- bind_rows(screen.full,fram.complete)
# Chunk 16
fulldat %>% ggplot(aes(x=Study,y=Omega3))+
geom_boxplot()
# Chunk 17
fulldat %>% group_by(Study)%>%
summarize(mean=mean(Omega3),sd=sd(Omega3),obs=n())
# Chunk 18
fulldat %>% group_by(Study)%>%
summarize(mean=mean(Age),sd=sd(Age),obs=n())
# Chunk 19
fulldat %>% ggplot(aes(x=Age,y=Omega3))+
geom_point()+
stat_smooth(method="lm",se=FALSE)
# Chunk 20
fulldat %>% ggplot(aes(x=Sex,y=Omega3))+
geom_boxplot()
# Chunk 21
screen.dat<- screen.dat %>% mutate(Study="S")
fulldat.mod <- bind_rows(screen.dat,fram.complete)
# Chunk 22
fulldat.mod <- fulldat.mod %>%
mutate(Sex=as.character(Sex))%>%
replace_na(list(Sex="Missing"))
# Chunk 23
omega.lm <- lm(Omega3~Age+Sex+Study,data=fulldat.mod)
summary(omega.lm)
# Chunk 24
omega.lm %>% ggplot(aes(x=.fitted,y=.resid))+
geom_point()
# Chunk 25
fulldat.removed <- fulldat.mod %>% filter(omega.lm$residuals<10)
# Chunk 26
omega.mod.lm <- lm(Omega3~Age+Sex+Study,data=fulldat.removed)
summary(omega.mod.lm)
framing.dat$Omega3
mean(framing.dat$Omega3)
mean(framing.dat$Omega3, na.rm = TRUE)
houses = read.table(file = "http://www.isi-stats.com/isi2/data/HomesDisc.csv")
View(houses)
houses_train = read.table(file = "http://www.isi-stats.com/isi2/data/HomesDisc.csv",
header = T, sep = ",")
houses_test = read.table(file = "http://www.isi-stats.com/isi2/data/HomeValid.csv",
header = T, sep = ",")
houses_test = read.table(file = "http://www.isi-stats.com/isi2/data/HomesValid.csv",
header = T, sep = ",")
houses = read.table(file = "http://www.isi-stats.com/isi2/data/housing.txt",
header = TRUE)
View(houses)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake))
library(tidyverse)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake))
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point()
houses %>%
mutate(price.predict = predict(model_withLake, newdata = .))
model_withLake = lm(price.1000 ~ sqft + lake, data = houses)
summary(model_withLake)
houses %>%
mutate(price.predict = predict(model_withLake, newdata = .))
houses %>%
mutate(price.predict = predict(model_withLake, newdata = .)) -> houses
houses %>%
mutate(price.predict = predict(model_withLake, newdata = .),
residuals = price.1000 - price.predict) -> houses
houses %>%
ggplot(aes(x = sqft, y = price.predict)) +
geom_line() +
geom_point(aes(y = price.1000))
houses %>%
ggplot(aes(x = sqft, y = price.predict, color = lake)) +
geom_line() +
geom_point(aes(y = price.1000))
houses %>% ggplot(aes(x = ,
y = residual,
color = lake)) +
geom_point() + geom_hline(yintercept = 0)
houses %>% ggplot(aes(x = ,
y = residuals,
color = lake)) +
geom_point() + geom_hline(yintercept = 0)
houses %>% ggplot(aes(x = sqft,
y = residuals,
color = lake)) +
geom_point() + geom_hline(yintercept = 0)
houses %>% ggplot(aes(x = price.1000,
y = residuals,
color = lake)) +
geom_point() + geom_hline(yintercept = 0)
coef(lake_model)
lake_model <- lm(price.1000 ~ sqft, data = houses %>% filter(lake == "lakefront"))
coef(lake_model)
nonlake_model <- lm(price.1000 ~ sqft, data = houses %>% filter(lake == "nonlakefront"))
nonlake_model <- lm(price.1000 ~ sqft, data = houses %>% filter(lake == "notlakefront"))
coef(nonlake_model)
model_interaction = lm(price.1000 ~ sqft * lake, data = houses)
summary(model_interaction)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_smooth(method = "lm",
formala = y ~ x) +
geom_point()
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_smooth(method = "lm",
formula = y ~ x) +
geom_point()
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point() +
geom_smooth(aes(sqft, price.1000))
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point() +
geom_smooth(aes(x = sqft, y = price.1000),
method = "lm",
formula = y ~ x)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point() +
group_by() %>%
geom_smooth(aes(x = sqft, y = price.1000),
method = "lm",
formula = y ~ x)
houses %>%
ggplot(aes(x = sqft, y = price.1000)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
model_simple <- lm(price.1000 ~ sqft, data = houses)
summary(model_simple)
diamonds = read.table(file = "http://www.isi-stats.com/isi2/data/diamonds.txt",
header = T)
dim(diamonds)
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
library(tidyverse)
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
model_Clarity = lm(Price..1000s. ~ Clarity, data = diamonds)
summary(model_Clarity)
diamonds %>%
mutate(Clarity = factor(Clarity,
levels = c("IV", "VVS1", "VVS2", "VS1", "VS2")))
diamonds <- diamonds %>%
mutate(Clarity = factor(Clarity,
levels = c("IV", "VVS1", "VVS2", "VS1", "VS2")))
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
diamonds = read.table(file = "http://www.isi-stats.com/isi2/data/diamonds.txt",
header = T)
diamonds <- diamonds %>%
mutate(Clarity = factor(Clarity,
levels = c("IF", "VVS1", "VVS2", "VS1", "VS2")))
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
model_Clarity = lm(Price..1000s. ~ Clarity, data = diamonds)
summary(model_Clarity)
diamonds %>%
group_by(Clarity) %>%
summarize(mean = mean(Price..1000s.),
sd = sd(Price..1000s.),
n = n())
head(diamonds)
diamonds %>%
group_by(Clarity) %>%
summarize(mean = mean(Carat),
sd = sd(Carat),
n = n())
model_ClarityWeight = lm(Price..1000s. ~ Carat + Clarity, data = diamonds)
summary(model_ClarityWeight)
model_ClarityWeight = lm(Price..1000s. ~ Carat + Clarity, data = diamonds)
summary(model_ClarityWeight)
anova(model_ClarityWeight)
diamonds = diamonds %>%
mutate(predicted2 = predict(model_ClarityWeight, diamonds))
diamonds %>% ggplot(aes(x = Carat, y = Price..1000s., color = Clarity)) +
geom_point() + geom_line(aes(y = predicted2))
library(Lahman)
Batting %>%
inner_join(Master, by = "playerID") %>%
group_by(playerID) %>%
filter(debut >= "1940-01-01") %>%
filter(debut <= "1945-12-31") %>%
group_by(playerID) %>%
summarize(N = n(), totalAB = sum(AB)) %>%
filter(totalAB >= 2000) %>%
arrange(desc(totalAB)) %>%
select(playerID) -> twothousandold
twothousandold
Batting %>%
inner_join(Master, by = "playerID") %>%
group_by(playerID) %>%
filter(debut >= "1970-01-01") %>%
filter(debut <= "1975-12-31") %>%
group_by(playerID) %>%
summarize(N = n(), totalAB = sum(AB)) %>%
filter(totalAB >= 2000) %>%
arrange(desc(totalAB)) %>%
select(playerID) -> twothousandnew
twothousandold %>%
map_df(get_stats) -> player.statsold
ice = read.table(file = "http://www.isi-stats.com/isi2/data/ArticSeaIce.txt",
header = T)
ice
3.2*sd(ice$Year12) + mean(ice$Year12)
library(tidyverse)
library(knitr)
redsox = read_csv(file = "Red Sox Season.csv")
setwd("./Chapter_6/")
redsox = read_csv(file = "Red Sox Season.csv")
redsox = redsox %>% mutate(Result = factor(str_sub(`W/L`,start = 0, end = 1),
levels = c("W","L")))
redsox = redsox %>% mutate(Field = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
View(redsox)
glm(Result == "W" ~ Field)
glm(Result == "W" ~ Field, family = "binomial", data = redsox)
glm(Result == "W" ~ Field + Attendance, family = "binomial", data = redsox)
model <- glm(Result == "W" ~ Field + Attendance, family = "binomial", data = redsox)
summary(model)
model <- glm(Result == "W" ~ Field, family = "binomial", data = redsox)
summary(model)
glheaders <- read_csv("https://raw.githubusercontent.com/maxtoki/baseball_R/master/data/game_log_header.csv")
library(tidyverse)
glheaders <- read_csv("https://raw.githubusercontent.com/maxtoki/baseball_R/master/data/game_log_header.csv")
gl2018 <- read_csv("GL2018.TXT",
col_names = names(glheaders),
na = character())
setwd("Chapter_6/")
gamelogs2018 <- read_csv("GL2018.TXT",
col_names = names(glheaders),
na = character())
View(gamelogs2018)
library(knitr)
gamelogs2018 %>%
select(Date, VisitingTeam, VisitorRunsScored, HomeTeam, HomeRunsScore) %>%
head(10)
gamelogs2018 %>%
select(Date, VisitingTeam, VisitorRunsScored, HomeTeam, HomeRunsScore) %>%
head(10) %>%
kable()
gamelogs2018 %>%
mutate(WinningTeam = case_when(HomeRunsScore > VisitorRunsScored ~ HomeTeam,
VisitorRunsScored > HomeRunsScore ~ VisitingTeam))
gamelogs2018 %>%
mutate(WinningTeam = case_when(HomeRunsScore > VisitorRunsScored ~ HomeTeam,
VisitorRunsScored > HomeRunsScore ~ VisitingTeam)) -> gamelogs2018
View(gamelogs2018)
gamelogs2018 %>%
filter(HomeTeam == "BOS" || AwayTeam == "BOS" )
gamelogs2018 %>%
filter(HomeTeam == "BOS" || VisitorTeam == "BOS" )
gamelogs2018 %>%
filter(HomeTeam == "BOS" || VisitingTeam == "BOS" )
gamelogs2018 %>%
filter(HomeTeam == "BOS" | VisitingTeam == "BOS" )
gamelogs2018 %>%
filter(HomeTeam == "BOS" | VisitingTeam == "BOS" ) -> redsox
redsox %>%
mutate(Result = ifelse(WinningTeam == "BOS", "W","L"),
Field = ifelse(HomeTeam == "BOS", "Home", "Away"))
redsox %>%
mutate(Result = ifelse(WinningTeam == "BOS", "W","L"),
Field = ifelse(HomeTeam == "BOS", "Home", "Away")) -> redsox
redsox %>%
select(Date, VisitingTeam, VisitorRunsScored, HomeTeam, HomeRunsScore, Result, Field) %>%
head(10) %>%
kable()
summary = redsox %>%
group_by(Field)%>%
count(Result) %>%
spread(key = Field, value = n)
kable(summary, caption = "Results of the Red Sox 2018 Season")
#every MLB game played in the 2018 season
website = "https://raw.githubusercontent.com/maxtoki/baseball_R"
file = "master/data/game_log_header.csv"
#every MLB game played in the 2018 season
website = "https://raw.githubusercontent.com/maxtoki/baseball_R"
file = "master/data/game_log_header.csv"
glheaders <- read_csv(paste(website,file, sep = ""))
glheaders <- read_csv(file = paste(website,file, sep = ""))
#every MLB game played in the 2018 season
website = "https://raw.githubusercontent.com/maxtoki/baseball_R/"
file = "master/data/game_log_header.csv"
glheaders <- read_csv(file = paste(website,file, sep = ""))
gamelogs2018 <- read_csv("GL2018.TXT",
col_names = names(glheaders),
na = character())
#  Add a variable called WinningTeam.
gamelogs2018 %>%
mutate(WinningTeam = case_when(HomeRunsScore > VisitorRunsScored ~
HomeTeam,
VisitorRunsScored > HomeRunsScore ~
VisitingTeam)) -> gamelogs2018
measures = data.frame(prob = seq(0,1, by = 0.05))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
measures = data.frame(prob = seq(0,1, by = 0.001))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
measures = data.frame(prob = seq(0,1, by = 0.01))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
measures = data.frame(prob = seq(0,1, by = 0.05))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
redsox %>% select(Date, Result) %>% head(10)
redsox %>% select(Date, Result) %>% head(20)
measures = data.frame(prob = seq(0,.99, by = 0.001))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
measures = data.frame(prob = seq(0,.90, by = 0.001))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
measures = data.frame(prob = seq(0,.90, by = 0.001))
measures = measures %>% mutate(odds = prob/(1-prob))
measures %>% ggplot(aes(x = prob, y = odds)) +
geom_line() +
geom_line(aes(y = prob))
redsox.sim = redsox %>% select(Result, Field)
riskDiff.sim = c()
n.sims = 5000
for(i in 1:n.sims){
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>% #shuffle wins
group_by(Field) %>%
count(Result.sim) %>% mutate(p = n/sum(n)) #calculate win percentages
riskDiff.sim[i] = summary.sim$p[3]-summary.sim$p[1]
}
hist(riskDiff.sim, breaks = 50)
hist(riskDiff.sim, breaks = 50)
# two-sample z-test
phat_home = 57/81
phat_away = 51/81
sum( abs(riskDiff.sim) > (phat_home - phat_away))/n.sims
redsox.sim = redsox %>% select(Result, Field)
riskDiff.sim = c()
n.sims = 5000
for(i in 1:n.sims){
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>% #shuffle wins
group_by(Field) %>%
count(Result.sim) %>% mutate(p = n/sum(n)) #calculate win percentages
riskDiff.sim[i] = summary.sim$p[3]-summary.sim$p[1]
}
hist(riskDiff.sim, breaks = 50)
sum( abs(riskDiff.sim) > (phat_home - phat_away))/n.sims
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>% #shuffle wins
group_by(Field) %>%
count(Result.sim) %>% mutate(p = n/sum(n)) #calculate win percentages
summary.sim
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>% #shuffle wins
group_by(Field) %>%
count(Result.sim) %>% mutate(p = n/sum(n)) #calculate win percentages
summary.sim
phat_home - phat_away
abs(riskDiff.sim)
abs(riskDiff.sim) > (phat_home - phat_away)
sum( abs(riskDiff.sim) > (phat_home - phat_away))
phat_home
phat_away
abs(riskDiff.sim) > (phat_home - phat_away)
sum(abs(riskDiff.sim) > (phat_home - phat_away))/n.sims
2*(1 - pnorm(3.96,0,1))
summary.sim = redsox.sim %>%
mutate(Result.sim = sample(Result)) %>% #shuffle wins
group_by(Field) %>%
count(Result.sim) %>% mutate(p = n/sum(n))
summary.sim
getwd()
57/81
51/81
phat_home/(1-phat_home)
phat_away/(1-phat_away)
phat_home-phat_away
phat_home/phat_away
2.375/1.7
log(1.4)
phat_home = 57/81
phat_away = 51/81
phat = 108/162
#standardized statistic (pg 420)
z = (phat_home - phat_away)/sqrt(phat*(1-phat)*(1/81 + 1/81))
summary_overall = redsox %>% group_by(Result) %>%
count() %>% group_by() %>% mutate(perc = n/sum(n)) %>%
select(-n)
#calculate expected wins
summary_homeaway = redsox %>%
group_by(Field,Result) %>%
count() %>%
left_join(summary_overall, by = "Result") %>%
group_by(Field) %>%
mutate(expected = perc*sum(n))
summary_homeaway
#calculate chi-square statistic
chisq = summary_homeaway %>% group_by() %>%
summarise(chisq = sum((n - expected)^2/expected))
View(chisq)
gl2018 <- gamelogs2018
gl2018 <- gamelogs2018
gl2018 %>%
group_by(HomeTeam) %>%
summarize(runsScoredHome = sum(HomeRunsScore),
runsAllowedHome = sum(VisitorRunsScored)) -> home_PF
home_PF
gl2018 %>%
group_by(VisitingTeam) %>%
summarize(runsScoredVisiting = sum(HomeRunsScore),
runsAllowedVisiting = sum(VisitorRunsScored)) -> visiting_PF
visiting_PF
gl2018 %>%
select(HomeTeam, VisitingTeam, HomeTeamGameNumber, VisitingTeamGameNumber) %>%
left_join(home_PF, by = c("HomeTeam" = "HomeTeam")) %>%
left_join(visiting_PF, by = c("VisitingTeam" = "VisitingTeam")) %>%
mutate(park_factor = ((runsScoredHome + runsAllowedHome)/sum(HomeTeamGameNumber))/((runsScoredVisiting + runsAllowedVisiting)/(sum(VisitingTeamGameNumber))))-> PF_data
PF_data
home_PF %>%
left_join(visting_PF, by= c("HomeTeam" = "VisitingTeam"))
home_PF %>%
left_join(visiting_PF, by= c("HomeTeam" = "VisitingTeam"))
data <- read_csv(file = "/Users/kfcummiskey/Downloads/penalties.csv")
data
model = lm(Duration ~ as.factor(Year), data = data)
summary(model)
