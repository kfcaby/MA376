diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point() + stat_summary(fun.y = mean, colour = "red", geom = "line")
diamonds
diamonds$Clarity = factor(diamonds$Clarity)
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point() + stat_summary(fun.y = mean, colour = "red", geom = "line")
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s., group = Clarity)) +
geom_point() + stat_summary(fun.y = mean, colour = "red", geom = "line")
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point() + geom_line(aes(group = Clarity))
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point() + geom_line(aes(group = 1))
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point() + geom_line(aes(group = Clarity))
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point() + geom_line()
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point() + geom_line()
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
model_Clarity = lm(Price..1000s. ~ Clarity, data = diamonds)
summary(model_Clarity)
anova(model_Clarity)
model_ClarityWeight = lm(Price..1000s. ~ Clarity + Carat, data = diamonds)
summary(model_ClarityWeight)
anova(model_ClarityWeight)
model_ClarityWeight = lm(Price..1000s. ~ Carat + Clarity, data = diamonds)
summary(model_ClarityWeight)
summary(model_Clarity)
diamonds = diamonds %>%
mutate(predicted2 = predict(model_ClarityWeight, diamonds))
diamonds %>% ggplot(aes(x = Carat, y = Price..1000s.)) +
geom_point() + geom_line(aes(y = predicted2))
diamonds %>% ggplot(aes(x = Carat, y = Price..1000s.)) +
geom_point() + geom_line(aes(y = predicted2, group = Carat))
diamonds %>% ggplot(aes(x = Carat, y = Price..1000s., color = Clarity)) +
geom_point() + geom_line(aes(y = predicted2))
model_interaction = lm(Price..1000s. ~ Carat*Clarity, data = diamond)
summary(model_interaction)
model_interaction = lm(Price..1000s. ~ Carat*Clarity, data = diamonds)
summary(model_interaction)
anova(model_interaction)
diamonds %>% ggplot(aes(x = Carat,y = Price..1000s., color=Clarity)) +
geom_smooth(method = "lm", se = F)
diamonds %>% ggplot(aes(x = Carat,y = Price..1000s., color=Clarity)) +
+geom_point() + geom_smooth(method = "lm", se = F)
diamonds %>% ggplot(aes(x = Carat,y = Price..1000s., color=Clarity)) +
geom_point() + geom_smooth(method = "lm", se = F)
diamonds %>% ggplot(aes(x = Carat,y = Price..1000s., color=Clarity)) +
geom_point() + geom_smooth(method = "lm", se = F, fullrange = T)
summary(model_interaction)
confint(model_interaction
)
install.packages('Sleuth3')
1 - pf(9.25,4,224)
install.packages()
install.packages('plotly')
nuts = nuts %>% mutate(std.tempXstd.air = std.temp*std.air)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Chunk 2
nuts = read.table(file = "http://www.isi-stats.com/isi2/data/pistachioStudy.txt",
header = T)
library(GGally)
library(plotly)
nuts %>% select(Temperature, AirVelocity, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
#nuts %>% plot_ly(x = ~Temperature, y = ~AirVelocity, z = ~Peroxide..remaining.)
# Chunk 3
model_TempVel = lm(Peroxide..remaining. ~ Temperature + AirVelocity, data = nuts)
summary(model_TempVel)
# Chunk 4
model_Temp = lm(Peroxide..remaining. ~ Temperature, data = nuts)
summary(model_Temp)
model_Vel = lm(Peroxide..remaining. ~ AirVelocity, data = nuts)
summary(model_Vel)
# Chunk 5
#In our data set, the variables are already standardized.
#If you needed to do it, you could use the scale function
nuts = nuts %>% mutate(temp.std = scale(Temperature))
model_std = lm(Peroxide..remaining. ~ std.temp + std.air, data = nuts)
summary(model_std)
# Chunk 6
model_std %>%
fortify() %>%
ggplot(aes(x = .fitted, y = .resid, color = factor(std.temp))) +
geom_point()
# Chunk 7
nuts = nuts %>% mutate(std.tempXstd.air = std.temp*std.air)
View(nuts)
nuts = nuts %>% mutate(std.tempXstd.air = std.temp*std.air)
nuts = nuts %>% mutate(sTemp_sAir = std.temp*std.air)
nuts = nuts %>% mutate(sTemp_sAir = std.temp * std.air)
nuts
nuts = nuts %>% mutate(interaction = std.temp * std.air)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Chunk 2
nuts = read.table(file = "http://www.isi-stats.com/isi2/data/pistachioStudy.txt",
header = T)
library(GGally)
library(plotly)
nuts %>% select(Temperature, AirVelocity, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
#nuts %>% plot_ly(x = ~Temperature, y = ~AirVelocity, z = ~Peroxide..remaining.)
# Chunk 3
model_TempVel = lm(Peroxide..remaining. ~ Temperature + AirVelocity, data = nuts)
summary(model_TempVel)
# Chunk 4
model_Temp = lm(Peroxide..remaining. ~ Temperature, data = nuts)
summary(model_Temp)
model_Vel = lm(Peroxide..remaining. ~ AirVelocity, data = nuts)
summary(model_Vel)
# Chunk 5
#In our data set, the variables are already standardized.
#If you needed to do it, you could use the scale function
#nuts = nuts %>% mutate(temp.std = scale(Temperature))
model_std = lm(Peroxide..remaining. ~ std.temp + std.air, data = nuts)
summary(model_std)
# Chunk 6
model_std %>%
fortify() %>%
ggplot(aes(x = .fitted, y = .resid, color = factor(std.temp))) +
geom_point()
# Chunk 7
nuts = nuts %>% mutate(interaction = std.temp * std.air)
nuts %>% select(Temperature, AirVelocity, interation, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
nuts %>% select(Temperature, AirVelocity, interaction, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
nuts %>% select(std.temp, std.air, interaction, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
model_interaction = lm(Peroxide..remaining. ~ std.temp * std.air)
model_interaction = lm(Peroxide..remaining. ~ std.temp * std.air,
data = nuts)
model_interaction = lm(Peroxide..remaining. ~ std.temp * std.air,
data = nuts)
summary(model_interaction)
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.temp, y = Peroxide..remaining)) %>%
geom_point()
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.temp, y = Peroxide..remaining)) +
geom_point()
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.temp, y = Peroxide..remaining.)) +
geom_point()
model_interaction %>%
fortify()
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.temp, y = Peroxide..remaining.)) +
geom_point() +
geom_line(aes(y = .fitted))
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.temp, y = Peroxide..remaining.)) +
geom_point() +
geom_line(aes(y = .fitted, group = factor(std.air)))
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.temp, y = Peroxide..remaining., color = factor(std.air))) +
geom_point() +
geom_line(aes(y = .fitted, group = factor(std.air)))
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.air, y = Peroxide..remaining., color = factor(std.temp))) +
geom_point() +
geom_line(aes(y = .fitted, group = factor(std.temp)))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Chunk 2
nuts = read.table(file = "http://www.isi-stats.com/isi2/data/pistachioStudy.txt",
header = T)
library(GGally)
library(plotly)
nuts %>% select(Temperature, AirVelocity, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
#nuts %>% plot_ly(x = ~Temperature, y = ~AirVelocity, z = ~Peroxide..remaining.)
# Chunk 3
model_TempVel = lm(Peroxide..remaining. ~ Temperature + AirVelocity, data = nuts)
summary(model_TempVel)
# Chunk 4
model_Temp = lm(Peroxide..remaining. ~ Temperature, data = nuts)
summary(model_Temp)
model_Vel = lm(Peroxide..remaining. ~ AirVelocity, data = nuts)
summary(model_Vel)
# Chunk 5
#In our data set, the variables are already standardized.
#If you needed to do it, you could use the scale function
#nuts = nuts %>% mutate(temp.std = scale(Temperature))
model_std = lm(Peroxide..remaining. ~ std.temp + std.air, data = nuts)
summary(model_std)
# Chunk 6
model_std %>%
fortify() %>%
ggplot(aes(x = .fitted, y = .resid, color = factor(std.temp))) +
geom_point()
# Chunk 7
nuts = nuts %>% mutate(interaction = std.temp * std.air)
nuts %>% select(std.temp, std.air, interaction, Peroxide..remaining.) %>%
ggpairs(lower = list(continuous = "smooth", se = F))
# Chunk 8
model_interaction = lm(Peroxide..remaining. ~ std.temp * std.air,
data = nuts)
summary(model_interaction)
# Chunk 9
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.temp, y = Peroxide..remaining., color = factor(std.air))) +
geom_point() +
geom_line(aes(y = .fitted, group = factor(std.air)))
model_interaction %>%
fortify() %>%
ggplot(aes(x = std.air, y = Peroxide..remaining., color = factor(std.temp))) +
geom_point() +
geom_line(aes(y = .fitted, group = factor(std.temp)))
library(tidyverse)
houses = read.table(file = "http://www.isi-stats.com/isi2/data/housing.txt",
header = TRUE)
View(houses)
houses %>% ggplot(aes(x = sqft, y = price.1000, color = lake)) + geom_point() +
geom_smooth(method = "lm")
model_withLake = lm(price.1000 ~ sqft * lake, data = houses)
summary(model_withLake)
connor_data = data.frame(t = 0:7, percent = c(0.3,0.1,0.2,0.4,0.3,0.2,0.3), gender = rep(1,7))
connor_data = data.frame(t = 0:7, percent = c(0.3,0.1,0.2,0.4,0.3,0.2,0.3,0.25), gender = rep(1,8))
connor_data
lm(percent ~ t, data = connor_data)
model = lm(percent ~ t, data = connor_data)
summary(model)
plot(t, percent)
plot(t, percent, data = connor_data)
library(tidyverse)
brains = read.table(file = "http://www.isi-stats.com/isi2/data/BrainSize.txt",
header = T)
View(brains)
brains %>% ggplot(aes(x = BrainSize, y = PIQ)) + geom_point()
model_unadjusted = lm(PIQ ~ BrainSize, data = brains)
summary(model_unadjusted)
brains %>% ggplot(aes(x = BrainSize, y = PIQ)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
library(gridExtra)
p1 = brains %>% ggplot(aes(x = BrainSize, y = Height)) +
geom_point() + geom_smooth(method = "lm", se = F)
p2 = brains %>% ggplot(aes(x = Height, y = PIQ)) +
geom_point() + geom_smooth(method = "lm", se = F)
p1 = brains %>% ggplot(aes(x = BrainSize, y = Height)) +
geom_point() + geom_smooth(method = "lm", se = F)
p2 = brains %>% ggplot(aes(x = Height, y = PIQ)) +
geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1,p2, ncol = 2)
model_PIQheight = lm(PIQ ~ Height, data = brains)
summary(model_PIQheight)
model_PIQheight %>% fortify()
model_PIQheight %>% fortify() %>%
mutate(PIQ_height_adj = mean(PIQ) + .resid)
model_PIQheight %>% fortify() %>%
mutate(PIQ_height_adj = mean(PIQ) + .resid) %>%
select(PIQ_height_adj)
brains$PIQ_height_adj = model_PIQheight %>% fortify() %>%
mutate(PIQ_height_adj = mean(PIQ) + .resid) %>%
select(PIQ_height_adj)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point()
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point()
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point()
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point()
grid.arrange(p3,p4,ncol = 2)
brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point()
brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point()
brains$PIQ_height_adj = model_PIQheight %>% fortify() %>%
mutate(PIQ_height_adj = mean(PIQ) + .resid) %>%
select(PIQ_height_adj)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point()
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point()
grid.arrange(p3,p4,ncol = 2)
brains = read.table(file = "http://www.isi-stats.com/isi2/data/BrainSize.txt",
header = T)
brains$PIQ_height_adj = model_PIQheight %>% fortify() %>%
mutate(PIQ_height_adj = mean(PIQ) + .resid) %>%
select(PIQ_height_adj)
model_PIQheight %>% fortify() %>%
mutate(PIQ_height_adj = mean(PIQ) + .resid) %>%
select(PIQ_height_adj)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point()
grid.arrange(p3,p4,ncol = 2)
summary_PIQheight = model_PIQheight %>% fortify()
brains = read.table(file = "http://www.isi-stats.com/isi2/data/BrainSize.txt",
header = T)
brains %>% mutate(PIQ_height_adj = mean(Height) + summary_PIQheight$.resid)
brains = brains %>% mutate(PIQ_height_adj = mean(Height) + summary_PIQheight$.resid)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point()
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point()
grid.arrange(p3,p4,ncol = 2)
brains = brains %>% mutate(PIQ_height_adj = mean(PIQ) + summary_PIQheight$.resid)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point()
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point()
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + scale_color_distiller(palette = "Spectral")
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + scale_color_distiller(palette = "Spectral", direction = -1)
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + scale_color_distiller(palette = "Spectral", direction = 1)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point()
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(70,150) + scale_color_distiller(palette = "Spectral", direction = 1)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(70,150) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(70,155) + scale_color_distiller(palette = "Spectral", direction = 1)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(70,155) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(70,160) + scale_color_distiller(palette = "Spectral", direction = 1)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(70,160) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,160) + scale_color_distiller(palette = "Spectral", direction = 1)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,160) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p3,p4,ncol = 2)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + scale_color_distiller(palette = "Spectral", direction = 1)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p3,p4,ncol = 2)
summary(lm(PIQ_height_adj ~ BrainSize, data = brains))
model_Brainheight = lm(Brain ~ Height, data = brains)
summary_Brainheight = model_Brainheight %>% fortify()
model_Brainheight = lm(BrainSize ~ Height, data = brains)
summary_Brainheight = model_Brainheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(BrainSize_height_adj = mean(PIQ) + summary_Brainheight$.resid)
p5 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + scale_color_distiller(palette = "Spectral", direction = 1)
p6 = brains %>% ggplot(aes(x = BrainSize_height_adj, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p5,p6,ncol = 2)
p6 + geom_smooth(method = "lm")
p6 + geom_smooth(method = "lm", se = FALSE)
p6 + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = coef(model_unadjusted)[1],
intercept = coef(model_unadjusted)[0],
col="black")
p6 + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = coef(model_unadjusted)[1],
intercept = coef(model_unadjusted)[0],
col="black")
coef(model_unadjusted)[1]
coef(model_unadjusted)[0]
p6 + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1],
col="black")
p6 + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1],
col="black")
intercept = coef(model_unadjusted)[1]
coef(model_unadjusted)[1]
coef(model_unadjusted)[2]
p6 + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1])
p6 + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1])
p6  +
geom_abline(slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1])
coef(model_unadjusted)[2]
coef(model_unadjusted)[1]
p6 = brains %>% ggplot(aes(x = BrainSize_height_adj, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +  scale_color_distiller(palette = "Spectral", direction = 1) +  geom_abline(slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1])
p6
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1]))
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(data = NULL, aes(slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1]))
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(data = NULL, mapping = NULL,slope = coef(model_unadjusted)[2],
intercept = coef(model_unadjusted)[1])
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_hline(yintercept = 120)
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = 0.1177)
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(slope = 0.1177, intercept = 4.66)
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = 0.1177, intercept = 4.66))
model_Brainheight = lm(BrainSize ~ Height, data = brains)
summary_Brainheight = model_Brainheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(BrainSize_height_adj = mean(BrainSize) + summary_Brainheight$.resid)
#plots on page 382
p5 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + scale_color_distiller(palette = "Spectral", direction = 1)
p6 = brains %>% ggplot(aes(x = BrainSize_height_adj, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p5,p6,ncol = 2)
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = 0.1177, intercept = 4.66))
model_height_brainsize = lm(PIQ ~ BrainSize + Height, data = brains)
summary(model_height_brainsize)
brains = brains %>% mutate(std.BrainSize = scale(BrainSize))
brains = brains %>% mutate(std.Height = scale(Height))
brains = brains %>% mutate(std.Height = scale(Height))
brains = brains %>% mutate(std.BrainSize = scale(BrainSize),
std.Height = scale(Height))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(tidyverse)
brains = read.table(file = "http://www.isi-stats.com/isi2/data/BrainSize.txt",
header = T)
# Chunk 3
brains %>% ggplot(aes(x = BrainSize, y = PIQ)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
model_unadjusted = lm(PIQ ~ BrainSize, data = brains)
summary(model_unadjusted)
# Chunk 4
library(gridExtra)
p1 = brains %>% ggplot(aes(x = BrainSize, y = Height)) +
geom_point() + geom_smooth(method = "lm", se = F)
p2 = brains %>% ggplot(aes(x = Height, y = PIQ)) +
geom_point() + geom_smooth(method = "lm", se = F)
grid.arrange(p1,p2, ncol = 2)
# Chunk 5
model_PIQheight = lm(PIQ ~ Height, data = brains)
summary_PIQheight = model_PIQheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(PIQ_height_adj = mean(PIQ) + summary_PIQheight$.resid)
#plots on page 382
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) +
scale_color_distiller(palette = "Spectral", direction = 1)
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +
scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p3,p4,ncol = 2)
# Chunk 6
model_Brainheight = lm(BrainSize ~ Height, data = brains)
summary_Brainheight = model_Brainheight %>% fortify()
#height-adjusted PIQ
brains = brains %>%
mutate(BrainSize_height_adj = mean(BrainSize) + summary_Brainheight$.resid)
#plots on page 382
p5 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + scale_color_distiller(palette = "Spectral", direction = 1)
p6 = brains %>% ggplot(aes(x = BrainSize_height_adj, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) +  scale_color_distiller(palette = "Spectral", direction = 1)
grid.arrange(p5,p6,ncol = 2)
# Chunk 7
p6   + geom_smooth(method = "lm", se = FALSE) +
geom_abline(aes(slope = 0.1177, intercept = 4.66))
# Chunk 8
model_height_brainsize = lm(PIQ ~ BrainSize + Height, data = brains)
summary(model_height_brainsize)
# Chunk 9
brains = brains %>% mutate(std.BrainSize = scale(BrainSize),
std.Height = scale(Height))
model_interaction = lm(PIQ ~ std.BrainSize + std.Height)
model_interaction = lm(PIQ ~ std.BrainSize + std.Height,
data = brains)
summary(model_interaction)
model_interaction = lm(PIQ ~ std.BrainSize * std.Height,
data = brains)
summary(model_interaction)
sc = scale_color_distiller(palette = "Spectral", direction = 1)
p3 = brains %>% ggplot(aes(x = BrainSize, y = PIQ, color = Height)) +
geom_point() + ylim(65,155) + sc
p4 = brains %>% ggplot(aes(x = BrainSize, y = PIQ_height_adj, color = Height)) +
geom_point() + ylim(65,155) + sc
grid.arrange(p3,p4,ncol = 2)
