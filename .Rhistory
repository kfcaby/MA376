factorial(n)/factorial(n-k)*factorial(9)
choose(5,3)*choose(10,6)
choose(5,3)*3!*choose(10,6)*6!
choose(5,3)*factorial(3)*choose(10,6)*factorial(6)
choose(10,5)
choose(10,5)/choose(24,5)
choose(10,5)*factorial(5)
choose(4,2)*choose(11,1)/choose(15,3)
(choose(5,3) + choose(6,3) + choose(4,3))/choose(15,3)
5*4*6/choose(15,3)
choose(11,3)/choose(15,3)
choose(11,5)/choose(15,5)
odor = read.table(file = "www.isi-stats.com/isi2/data/OdorRatings.txt",
header = T)
library(tidyverse)
odor = read.table(file = "www.isi-stats.com/isi2/data/OdorRatings.txt",
header = T)
odor = read.table(file = "www.isi-stats.com/isi2/data/OdorRatings.txt",
header = T)
odor = read.table(file = "OdorRatings.txt",
header = T)
View(odor)
odor %>% ggplot(aes(x = condition, y = rating)) +
geom_boxplot()
odor = odor %>% mutate(mean1 = mean(rating))
odor = odor %>% mutate(residuals1 = rating - mean1)
#standard error
SE = odor %>% summarise(sum(residuals1^2)/47)
SE
#Sum of Squares Total (SST)
SST = odor %>% summarise(sum(residual1^2))
#Sum of Squares Total (SST)
SST = odor %>% summarise(sum(residuals1^2))
SST
#Shortcut
model1 = lm(rating ~ 1, data = odor)
summary(model1)
SE
#calculate means for each group
odor = odor %>% group_by(condition) %>%
mutate(mean2 = mean(rating))
odor = odor %>% group_by()
#residuals
odor = odor %>% mutate(residuals2 = rating - mean2)
#standard error
odor = odor %>% summarise(sqrt(sum((rating - residuals2)^2)))
odor = read.table(file = "OdorRatings.txt",
header = T)
odor = odor %>% mutate(residuals1 = rating - mean1)
#The standard error of this model is the
#standard deviation of the residuals
#standard error
SE = odor %>% summarise(sum(residuals1^2)/47)
#Sum of Squares Total (SST)
SST = odor %>% summarise(sum(residuals1^2))
odor = odor %>% mutate(mean1 = mean(rating))
odor = odor %>% mutate(residuals1 = rating - mean1)
#The standard error of this model is the
#standard deviation of the residuals
#standard error
SE = odor %>% summarise(sum(residuals1^2)/47)
#Sum of Squares Total (SST)
SST = odor %>% summarise(sum(residuals1^2))
odor = odor %>% group_by(condition) %>%
mutate(mean2 = mean(rating))
odor = odor %>% group_by()
#residuals
odor = odor %>% mutate(residuals2 = rating - mean2)
#standard error
SE2 = odor %>% summarise(sqrt(sum((rating - mean2)^2)/46))
SE2
#Sums of Squared Error (SSE)
SE2 = odor %>% summarise(sum((rating - mean2)^2))
#standard error
SE2 = odor %>% summarise(sqrt(sum((rating - mean2)^2)/46))
#Sums of Squared Error (SSE)
SSE2 = odor %>% summarise(sum((rating - mean2)^2))
SSE2
SSModel = SST - SSE2
SSModel
#Shortcut
model = lm(rating ~ scent, data = odor)
#Shortcut
model = lm(rating ~ condition, data = odor)
#Shortcut
model2 = lm(rating ~ condition, data = odor)
summary(model2)
anova(model2)
(choose(4,2)*choose(11,1))/choose(15,3)
data = c(0.4,0.5,0.44,0.53,0.43,0.76,0.34)
data %>% summarise(sd(data))
library(tidyverse)
data = c(0.4,0.5,0.44,0.53,0.43,0.76,0.34)
data %>% summarise(sd(data))
data = as.tibble(data)
data %>% summarise(sd(data))
data = c(0.4,0.5,0.44,0.53,0.43,0.76,0.34)
data = as.tibble(data)
data %>% summarise(sd(data))
sd(data)
data = c(0.4,0.5,0.44,0.53,0.43,0.76,0.34)
sd(data)
(13/20-10/20)/0.114
(0.688-0.5)/0.087
16*17
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
odor = read.table(file = "OdorRatings.txt",
header = T)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
odor = read.table(file = "OdorRatings.txt",
header = T)
getwd()
odor = read.table(file = "Odor Example 12/OdorRatings.txt",
header = T)
odor %>% ggplot(aes(x = condition, y = rating)) +
geom_boxplot()
odor = odor %>% mutate(mean1 = mean(rating))
odor = odor %>% mutate(residuals1 = rating - mean1)
#The standard error of this model is the
#standard deviation of the residuals
#standard error
SE = odor %>% summarise(sum(residuals1^2)/47)
#Sum of Squares Total (SST)
SST = odor %>% summarise(sum(residuals1^2))
#Shortcut
model1 = lm(rating ~ 1, data = odor)
summary(model1)
#calculate means for each group
odor = odor %>% group_by(condition) %>%
mutate(mean2 = mean(rating))
odor = odor %>% group_by()
#residuals
odor = odor %>% mutate(residuals2 = rating - mean2)
#standard error
SE2 = odor %>% summarise(sqrt(sum((rating - mean2)^2)/46))
#Sums of Squared Error (SSE)
SSE2 = odor %>% summarise(sum((rating - mean2)^2))
SSModel = SST - SSE2
#Shortcut
model2 = lm(rating ~ condition, data = odor)
summary(model2)
anova(model2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
odor = read.table(file = "Odor Example 12/OdorRatings.txt",
header = T)
#observed statistic
odor %>% group_by(condition) %>% summarise(mean(rating))
#observed statistic
summary =odor %>% group_by(condition) %>% summarise(mean(rating))
#observed statistic
summary =odor %>% group_by(condition) %>% summarise(mean(rating)) %>% summarise(diff(mean(rating)))
odor %>% group_by(condition) %>% summarise(mean(rating))
#observed statistic
summary =odor %>% group_by(condition) %>% summarise(mean(rating)) %>% summarise(diff(`mean(rating)`))
summary
#observed statistic
odor %>% group_by(condition) %>% summarise(mean(rating), sd(rating))
differences = c()
sim.dat = odor %>% mutate(sim.condition = sample(condition))
sim.dat
sim.scent.rating = sim.dat %>% filter(sim.condition == "scent")
sim.scent.rating
sim.scent.rating = sim.dat %>% filter(sim.condition == "scent") %>% select(rating)
sim.scent.rating
sim.noscent.rating = sim.dat %>% filter(sim.condition == "noscent")
sim.scent =sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff = mean(sim.scent$rating) - mean(sim.noscent$rating)
sim.diff
m = 10000
sim.diff = c()
for(i in 1:m){
sim.dat = odor %>% mutate(sim.condition = sample(condition))
sim.scent =sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff[i] = mean(sim.scent$rating) - mean(sim.noscent$rating)
}
hist(sim.diff)
hist(sim.diff, bins = 100)
hist(sim.diff, breaks = 100)
sum(sim.diff > 1.3)/m
odor$rating
odor
sim.SEresiduals = sum(sim.scent$rating - mean(sim.scent$rating)) +
sum(sim.noscent$rating - mean(sim.noscent$rating))
sim.SEresiduals = sqrt(sum(sim.scent$rating - mean(sim.scent$rating)) +
sum(sim.noscent$rating - mean(sim.noscent$rating)))/46
sim.SEresiduals
sim.SEresiduals = sqrt(sum(sim.scent$rating - mean(sim.scent$rating)) +
sum(sim.noscent$rating - mean(sim.noscent$rating)))/46)
sim.SEresiduals = sqrt((sum(sim.scent$rating - mean(sim.scent$rating)) +
sum(sim.noscent$rating - mean(sim.noscent$rating)))/46)
sim.dat = sim.dat %>% group_by(sim.condition) %>% mutate(mean2 = mean(rating))
sim.dat
sim.dat = sim.dat %>% group_by() %>% mutate(residual = rating - mean2)
sim.SEresiduals = sum(sim.dat$residual^2)/46
sim.t = sim.diff[i]/(sim.SEresiduals*sqrt(1/24 + 1/24))
sim.diff[i] = mean(sim.scent$rating) - mean(sim.noscent$rating)
sim.t = c()
for(i in 1:m){
sim.dat = odor %>% mutate(sim.condition = sample(condition))
sim.scent =sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff[i] = mean(sim.scent$rating) - mean(sim.noscent$rating)
sim.dat = sim.dat %>% group_by(sim.condition) %>% mutate(mean2 = mean(rating))
sim.dat = sim.dat %>% group_by() %>% mutate(residual = rating - mean2)
sim.SEresiduals = sum(sim.dat$residual^2)/46
sim.t[i] = sim.diff[i]/(sim.SEresiduals*sqrt(1/24 + 1/24))
}
hist(sim.t, breaks = 100)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
odor = read.table(file = "Odor Example 12/OdorRatings.txt",
header = T)
odor %>% ggplot(aes(x = condition, y = rating)) +
geom_boxplot()
odor = odor %>% mutate(mean1 = mean(rating))
odor = odor %>% mutate(residuals1 = rating - mean1)
#The standard error of this model is the
#standard deviation of the residuals
#standard error
SE = odor %>% summarise(sum(residuals1^2)/47)
#Sum of Squares Total (SST)
SST = odor %>% summarise(sum(residuals1^2))
#Shortcut
model1 = lm(rating ~ 1, data = odor)
summary(model1)
odor = odor %>% group_by(condition) %>%
mutate(mean2 = mean(rating))
odor = odor %>% group_by()
#residuals
odor = odor %>% mutate(residuals2 = rating - mean2)
#standard error
SE2 = odor %>% summarise(sqrt(sum((rating - mean2)^2)/46))
#Sums of Squared Error (SSE)
SSE2 = odor %>% summarise(sum((rating - mean2)^2))
SSModel = SST - SSE2
#Shortcut
model2 = lm(rating ~ condition, data = odor)
summary(model2)
anova(model2)
summary(model2)
names(summary(model2))
summary(model2)$sigma
odor
odor %>% group_by(condition) %>% summarise(mean(rating))
sim.dat = odor %>% mutate(sim.condition =
sample(condition))
sim.dat
sim.dat = odor %>% mutate(sim.condition =
sample(condition))
sim.dat
sim.scent = odor %>% filter(sim.condition = "scent")
sim.scent = sim.dat %>% filter(sim.condition = "scent")
sim.scent = sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff = mean(sim.scent$rating) - mean(sim.noscent$rating)
sim.diff
sim.diff = c()
m = 10000 #number of simulations
for(i in 1:m){
sim.dat = odor %>% mutate(sim.condition =
sample(condition))
sim.scent = sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff[i] = mean(sim.scent$rating) - mean(sim.noscent$rating)
}
sim.diff
hist(sim.diff)
hist(sim.diff, breaks = 100)
hist(odor$rating)
hist(odor$rating, breaks =10)
hist(sim.diff, breaks = 100)
sum(sim.diff > 1.3)/m
#inference on R^2
model = lm(rating ~ sim.condition, data = sim.dat)
summay(model)
summary(model)
names(summary(model))
sim.diff = c()
r.squared = c()
m = 10000 #number of simulations
for(i in 1:m){
sim.dat = odor %>% mutate(sim.condition =
sample(condition))
sim.scent = sim.dat %>% filter(sim.condition == "scent")
sim.noscent = sim.dat %>% filter(sim.condition == "noscent")
sim.diff[i] = mean(sim.scent$rating) - mean(sim.noscent$rating)
#inference on R^2
model = lm(rating ~ sim.condition, data = sim.dat)
r.squared[i] = summary(model)$r.squared
}
summary(model)
summary(model)$r.squared
(0.1)*0.3/(0.1*0.3 + 0.6*0.7)
32*.688
prop.test(x = 22,n = 32, p = 0.5)
prop.test(x = 22,n = 32, p = 0.5, alternative = "greater")
prop.test(x = 22,n = 32, p = 0.5)
prop.test(x = 22,n = 32, p = 0.5, correct = FALSE)
prop.test(x = 22,n = 32, p = 0.5)
prop.test(x = 23,n = 32, p = 0.5)
prop.test(x = 22,n = 32, p = 0.5)
prop.test(x = 22,n = 32, p = 0.5, alternative = "greater")
prop.test(x = 22,n = 32, p = 0.5, alternative = "greater", correct = FALSE)
prop.test(x = 22,n = 32, p = 0.5,  correct = FALSE)
#x is the number of successes
#n is the number of trials
#p is the null probability
prop.test(x = 22, n = 32, p = 0.5, alternative = "two.sided", correct = FALSE)
#x is the number of successes
#n is the number of trials
#p is the null probability
prop.test(x = 63, n = 100, p = 0.5, alternative = "two.sided", correct = FALSE)
libary(tidyverse)
fish = read_csv(file = "FishOmega3.txt")
library(tidyverse)
fish = read_csv(file = "FishOmega3.txt")
setwd("./Omega3/")
fish = read_csv(file = "FishOmega3.txt")
fish = read.table(file = "FishOmega3.txt")
fish = read_csv(file = "FishOmega3.txt")
fish = read_csv(file = "FishOmega3.txt", delim = "\t")
omega.dat<-read.table('http://www.isi-stats.com/isi2/data/FishOmega3.txt',sep= "\t")
omega.dat
fish = read_csv(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt")
fish = read_csv(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
delim = "\t")
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt")
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t")
View(fish)
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
#descriptive statistics
fish %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
fish %>% ggplot(aes(y = omega.3)) + geom_boxplot()
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
fish = fish %>% filter(omega.3 < 0.08)
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
fish = fish %>% mutate(mean1 = mean(omega.3))
SST = sum((fish$omega.3-fish$mean1)^2)
write_csv(fish, "fish_backup.csv")
read_csv(file = "fish_backup.csv")
library(tidyverse)
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
fish %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
fish %>% ggplot(aes(y = omega.3)) + geom_boxplot()
fish = fish %>% filter(omega.3 < 0.08)
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
fish = fish %>% mutate(mean1 = mean(omega.3))
SST = sum((fish$omega.3-fish$mean1)^2)
fish = fish %>% group_by(fish) %>% mutate(mean2 = mean(omega.3))
View(fish)
#SSE
SSE = sum((fish$omega.3 - fish$mean2)^2)
#SSR
SSR = SST - SSE
#R^2
R2 = SSR/SST
model = lm(omega.3 ~ fish, data = fish)
anova(model)
fish.sim = fish %>% mutate(sample(fish))
fish.sim = fish.sim %>% group_by(fish) %>% mutate(mean2.sim = mean(omega.3))
View(fish.sim)
fish = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
fish %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
fish %>% ggplot(aes(y = omega.3)) + geom_boxplot()
fish = fish %>% filter(omega.3 < 0.08)
fish %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
fish = fish %>% mutate(mean1 = mean(omega.3))
SST = sum((fish$omega.3-fish$mean1)^2)
fish = fish %>% group_by(fish) %>% mutate(mean2 = mean(omega.3))
#SSE
SSE = sum((fish$omega.3 - fish$mean2)^2)
#SSR
SSR = SST - SSE
#R^2
R2 = SSR/SST
model = lm(omega.3 ~ fish, data = fish)
anova(model)
m = 5000
rsquared = c()
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
rsquared = 1-SSE/SST
rsquared = 1-SSE.sim/SST
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
rsquared = 1-SSE.sim/SST
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
rsquared = 1-SSE.sim/SST
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
rsquared = 1-SSE.sim/SST
fish.sim = fish %>% mutate(fish.sim = sample(fish))
fish.sim = fish %>% mutate(fish.sim = sample(fish$fish))
fish.sim = fish.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((fish.sim$omega.3 - fish.sim$mean2.sim)^2)
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
diet %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
diet %>% ggplot(aes(y = omega.3)) + geom_boxplot()
diet = diet %>% filter(omega.3 < 0.08)
diet %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
library(tidyverse)
diet = read.table(file = "http://www.isi-stats.com/isi2/data/FishOmega3.txt",
sep = "\t",
header = TRUE)
#descriptive statistics
diet %>% group_by(fish) %>% summarise(mean(omega.3),
sd(omega.3),
n())
diet %>% ggplot(aes(y = omega.3)) + geom_boxplot()
diet = diet %>% filter(omega.3 < 0.08)
diet %>% ggplot(aes(x = fish, y = omega.3)) + geom_boxplot()
diet = diet %>% mutate(mean1 = mean(omega.3))
SST = sum((diet$omega.3-diet$mean1)^2)
diet = diet %>% group_by(fish) %>% mutate(mean2 = mean(omega.3))
#SSE
SSE = sum((diet$omega.3 - diet$mean2)^2)
#SSR
SSR = SST - SSE
#R^2
R2 = SSR/SST
model = lm(omega.3 ~ fish, data = diet)
anova(model)
m = 5000
rsquared = c()
diet.sim = diet %>% mutate(fish.sim = sample(fish))
View(diet.sim)
diet.sim = diet %>% mutate(fish.sim = sample(fish))
diet.sim = diet.sim %>% group_by(fish.sim) %>% mutate(mean2.sim = mean(omega.3))
sample(diet$fish)
diet %>% mutate(fish.sim = sample(fish))
sim.diet = diet %>% mutate(sim.fish = sample(fish))
View(sim.diet)
sim.diet = diet %>% mutate(sim.fish = sample(fish, replace = FALSE))
sample(diet$fish)
diet$sim.fish = sample(diet$fish)
View(diet)
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2)
rsquared = 1-SSE.sim/SST
for(i in 1:m){
diet$sim.fish = sample(diet$fish)
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2)
rsquared[i] = 1-SSE.sim/SST
}
hist(rsquared)
hist(rsquared, breaks)
hist(rsquared, breaks = 50)
sum(rsquared > R2)/m
plot(df(seq(0,0.6,0.01), 4, 22))
x = seq(0,0.6,0.01)
plot(x, df(x,4,22))
x = seq(0,0.6,0.01)
plot(x, df(x,4,22))
df(x,4,22)
plot(x, df(x,4,22))
anova(model)
#Fstat
Fstat = (SSR/4)/(SSE/22)
summary(model)
for(i in 1:m){
diet$sim.fish = sample(diet$fish)
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2)
rsquared[i] = 1-SSE.sim/SST
fstat.sim[i] = ((SST-SSE.sim)/4)/(SSE.sim/22)
}
fstat.sim = c()
for(i in 1:m){
diet$sim.fish = sample(diet$fish)
diet = diet %>% group_by(sim.fish) %>% mutate(mean2.sim = mean(omega.3))
SSE.sim = sum((diet$omega.3 - diet$mean2.sim)^2)
rsquared[i] = 1-SSE.sim/SST
fstat.sim[i] = ((SST-SSE.sim)/4)/(SSE.sim/22)
}
hist(fstat.sim)
x = seq(0,10,0.1)
plot(x, df(x,4,22))
plot(x, df(x,4,22), type = "l")
hist(fstat.sim)
plot(x, df(x,4,22), type = "l")
1 - pf(5.62, 4, 22)
summary(model)
1 - pf(5.62, 4, 22)
