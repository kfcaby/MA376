mutate(Alive.pred = factor(ifelse(pred.alive > 0.5,
1, 0)))
smoke_cleaned %>% ggplot(aes(x = pred.alive,
y = Alive,
color = Alive.pred)) +
geom_jitter(height = 0.05, width = 0.025) + xlim(0,1)
summary(smoke_cleaned$Alive.pred)
smoke_cleaned = smoked_cleaned %>%
mutate(correct.class = ifelse(Alive.pred == Alive,
1,0))
smoke_cleaned = smoke_cleaned %>%
mutate(correct.class = ifelse(Alive.pred == Alive,
1,0))
smoke_cleaned %>% ggplot(aes(x = pred.alive,
y = Alive,
color = correct.class)) +
geom_jitter(height = 0.05, width = 0.025) + xlim(0,1)
smoke_cleaned = smoke_cleaned %>%
mutate(correct.class = factor(ifelse(Alive.pred == Alive,
1,0)))
smoke_cleaned %>% ggplot(aes(x = pred.alive,
y = Alive,
color = correct.class)) +
geom_jitter(height = 0.05, width = 0.025) + xlim(0,1)
smoke_cleaned = smoke_cleaned %>%
mutate(correct.class = ifelse(Alive.pred == Alive,
1,0))
summary(smoke_cleaned$correct.class)
smoke_cleaned = smoke_cleaned %>%
mutate(correct.class = ifelse(Alive.pred == Alive,
"1","0"))
summary(smoke_cleaned$correct.class)
smoke_cleaned = smoke_cleaned %>%
mutate(correct.class = ifelse(Alive.pred == Alive,
1,0))
smoke_cleaned$correct.class = factor(smoke_cleaned$correct.class)
summary(smoke_cleaned$correct.class)
smoke_cleaned %>% ggplot(aes(x = pred.alive,
y = Alive,
color = correct.class)) +
geom_jitter(height = 0.05, width = 0.025) + xlim(0,1)
smoke_cleaned %>% ggplot(aes(x = pred.alive,
y = Alive,
color = correct.class)) +
geom_jitter(height = 0.05, width = 0.025) + xlim(0,1.2)
library(caret)
library(caret)
confusionMatrix(data = smoke_cleaned$Alive.pred,
reference = smoke_cleaned$Alive)
mean(smoke_cleaned$correct.class)
sum(smoke_cleaned$correct.class)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Chunk 2
smoke = read.table(file = "smoke.csv", header = T, sep = ",")
smoke$Alive = factor(smoke$Alive)
smoke$Smoker = factor(smoke$Smoker)
summary = smoke %>% group_by(Smoker, Alive) %>%
count() %>%  group_by(Smoker) %>% mutate(prop = n/sum(n))
summary %>% ggplot(aes(x = Smoker, y = prop, fill = Alive)) +
geom_col()
# Chunk 3
model.crude = glm(Alive ~ Smoker, data = smoke, family = "binomial")
summary(model.crude)
# Chunk 4
summary2 = smoke %>% group_by(Age,Smoker, Alive) %>%
count() %>%  group_by(Age,Smoker) %>% mutate(prop.alive = n/sum(n)) %>%
filter(Alive == 1) %>% select(Age,Smoker,prop.alive)
summary2 %>% ggplot(aes(x = Age, y = prop.alive, color = Smoker)) +
geom_point()
# Chunk 5
#remove older folks - no survivors 75 years or older.
smoke_cleaned = smoke %>% filter(Age < 70)
model.age_adjusted = glm(Alive ~ Smoker + Age, data = smoke_cleaned, family = "binomial")
summary(model.age_adjusted)
library(car)
Anova(model.age_adjusted, type = "III")
# Chunk 6
smoke_cleaned = smoke_cleaned %>% left_join(summary2)
smoke_cleaned = smoke_cleaned %>% mutate(pred.alive = predict(model.age_adjusted, smoke_cleaned, type = "response"))
cor(smoke_cleaned$prop.alive, smoke_cleaned$pred.alive)
smoke_cleaned = smoke_cleaned %>%
mutate(Alive.pred = factor(ifelse(pred.alive > 0.5,
1, 0)))
smoke_cleaned = smoke_cleaned %>%
mutate(correct.class = ifelse(Alive.pred == Alive,
1,0))
smoke_cleaned %>% ggplot(aes(x = pred.alive,
y = Alive,
color = factor(correct.class))) +
geom_jitter(height = 0.05, width = 0.025) + xlim(0,1.2)
mean(smoke_cleaned$correct.class)
confusionMatrix(data = smoke_cleaned$Alive.pred,
reference = smoke_cleaned$Alive)
smoke_cleaned %>% ggplot(aes(x = pred.alive,
y = Alive,
color = factor(correct.class))) +
geom_jitter(height = 0.05, width = 0.025) + xlim(0,1.2) +
geom_vline(xintercept = 0.5)
model.interaction = glm(Alive ~ Smoker*Age,
data = smoke_cleaned,
family = "binomial")
summary(model.interaction)
setwd("./Chapter_6/")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# Chunk 2
smoke = read.table(file = "smoke.csv", header = T, sep = ",")
smoke$Alive = factor(smoke$Alive)
smoke$Smoker = factor(smoke$Smoker)
summary = smoke %>% group_by(Smoker, Alive) %>%
count() %>%  group_by(Smoker) %>% mutate(prop = n/sum(n))
summary %>% ggplot(aes(x = Smoker, y = prop, fill = Alive)) +
geom_col()
# Chunk 3
model.crude = glm(Alive ~ Smoker, data = smoke, family = "binomial")
summary(model.crude)
# Chunk 4
summary2 = smoke %>% group_by(Age,Smoker, Alive) %>%
count() %>%  group_by(Age,Smoker) %>% mutate(prop.alive = n/sum(n)) %>%
filter(Alive == 1) %>% select(Age,Smoker,prop.alive)
summary2 %>% ggplot(aes(x = Age, y = prop.alive, color = Smoker)) +
geom_point()
# Chunk 5
#remove older folks - no survivors 75 years or older.
smoke_cleaned = smoke %>% filter(Age < 70)
model.age_adjusted = glm(Alive ~ Smoker + Age, data = smoke_cleaned, family = "binomial")
summary(model.age_adjusted)
library(car)
Anova(model.age_adjusted, type = "III")
# Chunk 6
smoke_cleaned = smoke_cleaned %>% left_join(summary2)
smoke_cleaned = smoke_cleaned %>% mutate(pred.alive = predict(model.age_adjusted, smoke_cleaned, type = "response"))
cor(smoke_cleaned$prop.alive, smoke_cleaned$pred.alive)
# Chunk 7
smoke_cleaned = smoke_cleaned %>%
mutate(Alive.pred = factor(ifelse(pred.alive > 0.5,
1, 0)))
smoke_cleaned = smoke_cleaned %>%
mutate(correct.class = ifelse(Alive.pred == Alive,
1,0))
smoke_cleaned %>% ggplot(aes(x = pred.alive,
y = Alive,
color = factor(correct.class))) +
geom_jitter(height = 0.05, width = 0.025) + xlim(0,1.2) +
geom_vline(xintercept = 0.5)
# Chunk 8
library(caret)
confusionMatrix(data = smoke_cleaned$Alive.pred,
reference = smoke_cleaned$Alive)
View(summary)
View(smoke_cleaned)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE,fig.width=12, fig.height=6,fig.show = "hide")
library(tidyverse)
library(GGally)
library(boot)
options(tinytex.verbose = TRUE)
redsox = read_csv(file = "../Chapter_6/Red Sox Season")
redsox = redsox %>% mutate(Result = factor(str_sub(`W/L`,start = 0, end = 1),
levels = c("W","L")))
redsox = redsox %>% mutate(Field = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
redsox$Result = factor(redsox$Result,
levels = c("L","W"))
# Chunk 2
model = glm(Result ~ Field + Opp, data = redsox, family = "binomial")
summary(model)
# Chunk 3
framing.dat<-read.csv("FraminghamOmega3.csv")
head(framing.dat)
# Chunk 4
framing.dat <- framing.dat %>%
mutate(Omega3=Omega3...)%>%
select(-`Omega3...`)
# Chunk 5
mean(framing.dat$Omega3)
# Chunk 6
complete<-complete.cases(framing.dat)
sum(complete)
nrow(framing.dat)
# Chunk 7
fram.complete <- framing.dat %>% drop_na()
# Chunk 8
fram.mis<- framing.dat %>% filter(is.na(Omega3))
# Chunk 9
t.test(fram.complete$Age,fram.mis$Age)
# Chunk 10
screen.dat<-read.csv("ScreeningsOmega3.csv")
screen.dat <- screen.dat %>%
mutate(Omega3=Omega3...)%>%
select(-Omega3...)
head(screen.dat)
# Chunk 11
screen.full <- screen.dat %>% drop_na()
nrow(screen.dat)
nrow(screen.full)
# Chunk 12
screen.mis<- screen.dat %>% filter(is.na(Sex))
screen.mis %>% summarize(count=n(),mean.Omeg=mean(Omega3),sd.Omeg=sd(Omega3),mean.age=mean(Age),sd.age=sd(Age))
# Chunk 13
screen.full %>% summarize(count=n(),mean.Omeg=mean(Omega3),sd.Omeg=sd(Omega3),mean.age=mean(Age),sd.age=sd(Age))
# Chunk 14
screen.full%>%ggplot(aes(x=Omega3))+
geom_histogram()+
geom_rug(sides="b")
# Chunk 15
screen.full<- screen.full %>% mutate(Study="S")
fram.complete <- fram.complete %>% mutate(Study="F")
fulldat <- bind_rows(screen.full,fram.complete)
# Chunk 16
fulldat %>% ggplot(aes(x=Study,y=Omega3))+
geom_boxplot()
# Chunk 17
fulldat %>% group_by(Study)%>%
summarize(mean=mean(Omega3),sd=sd(Omega3),obs=n())
# Chunk 18
fulldat %>% group_by(Study)%>%
summarize(mean=mean(Age),sd=sd(Age),obs=n())
# Chunk 19
fulldat %>% ggplot(aes(x=Age,y=Omega3))+
geom_point()+
stat_smooth(method="lm",se=FALSE)
# Chunk 20
fulldat %>% ggplot(aes(x=Sex,y=Omega3))+
geom_boxplot()
# Chunk 21
screen.dat<- screen.dat %>% mutate(Study="S")
fulldat.mod <- bind_rows(screen.dat,fram.complete)
# Chunk 22
fulldat.mod <- fulldat.mod %>%
mutate(Sex=as.character(Sex))%>%
replace_na(list(Sex="Missing"))
# Chunk 23
omega.lm <- lm(Omega3~Age+Sex+Study,data=fulldat.mod)
summary(omega.lm)
# Chunk 24
omega.lm %>% ggplot(aes(x=.fitted,y=.resid))+
geom_point()
# Chunk 25
fulldat.removed <- fulldat.mod %>% filter(omega.lm$residuals<10)
# Chunk 26
omega.mod.lm <- lm(Omega3~Age+Sex+Study,data=fulldat.removed)
summary(omega.mod.lm)
setwd("./Example7_1/")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE,fig.width=12, fig.height=6,fig.show = "hide")
library(tidyverse)
library(GGally)
library(boot)
options(tinytex.verbose = TRUE)
redsox = read_csv(file = "../Chapter_6/Red Sox Season")
redsox = redsox %>% mutate(Result = factor(str_sub(`W/L`,start = 0, end = 1),
levels = c("W","L")))
redsox = redsox %>% mutate(Field = case_when(is.na(X5) ~ "Home",
TRUE ~ "Away"))
redsox$Result = factor(redsox$Result,
levels = c("L","W"))
# Chunk 2
model = glm(Result ~ Field + Opp, data = redsox, family = "binomial")
summary(model)
# Chunk 3
framing.dat<-read.csv("FraminghamOmega3.csv")
head(framing.dat)
# Chunk 4
framing.dat <- framing.dat %>%
mutate(Omega3=Omega3...)%>%
select(-`Omega3...`)
# Chunk 5
mean(framing.dat$Omega3)
# Chunk 6
complete<-complete.cases(framing.dat)
sum(complete)
nrow(framing.dat)
# Chunk 7
fram.complete <- framing.dat %>% drop_na()
# Chunk 8
fram.mis<- framing.dat %>% filter(is.na(Omega3))
# Chunk 9
t.test(fram.complete$Age,fram.mis$Age)
# Chunk 10
screen.dat<-read.csv("ScreeningsOmega3.csv")
screen.dat <- screen.dat %>%
mutate(Omega3=Omega3...)%>%
select(-Omega3...)
head(screen.dat)
# Chunk 11
screen.full <- screen.dat %>% drop_na()
nrow(screen.dat)
nrow(screen.full)
# Chunk 12
screen.mis<- screen.dat %>% filter(is.na(Sex))
screen.mis %>% summarize(count=n(),mean.Omeg=mean(Omega3),sd.Omeg=sd(Omega3),mean.age=mean(Age),sd.age=sd(Age))
# Chunk 13
screen.full %>% summarize(count=n(),mean.Omeg=mean(Omega3),sd.Omeg=sd(Omega3),mean.age=mean(Age),sd.age=sd(Age))
# Chunk 14
screen.full%>%ggplot(aes(x=Omega3))+
geom_histogram()+
geom_rug(sides="b")
# Chunk 15
screen.full<- screen.full %>% mutate(Study="S")
fram.complete <- fram.complete %>% mutate(Study="F")
fulldat <- bind_rows(screen.full,fram.complete)
# Chunk 16
fulldat %>% ggplot(aes(x=Study,y=Omega3))+
geom_boxplot()
# Chunk 17
fulldat %>% group_by(Study)%>%
summarize(mean=mean(Omega3),sd=sd(Omega3),obs=n())
# Chunk 18
fulldat %>% group_by(Study)%>%
summarize(mean=mean(Age),sd=sd(Age),obs=n())
# Chunk 19
fulldat %>% ggplot(aes(x=Age,y=Omega3))+
geom_point()+
stat_smooth(method="lm",se=FALSE)
# Chunk 20
fulldat %>% ggplot(aes(x=Sex,y=Omega3))+
geom_boxplot()
# Chunk 21
screen.dat<- screen.dat %>% mutate(Study="S")
fulldat.mod <- bind_rows(screen.dat,fram.complete)
# Chunk 22
fulldat.mod <- fulldat.mod %>%
mutate(Sex=as.character(Sex))%>%
replace_na(list(Sex="Missing"))
# Chunk 23
omega.lm <- lm(Omega3~Age+Sex+Study,data=fulldat.mod)
summary(omega.lm)
# Chunk 24
omega.lm %>% ggplot(aes(x=.fitted,y=.resid))+
geom_point()
# Chunk 25
fulldat.removed <- fulldat.mod %>% filter(omega.lm$residuals<10)
# Chunk 26
omega.mod.lm <- lm(Omega3~Age+Sex+Study,data=fulldat.removed)
summary(omega.mod.lm)
framing.dat$Omega3
mean(framing.dat$Omega3)
mean(framing.dat$Omega3, na.rm = TRUE)
houses = read.table(file = "http://www.isi-stats.com/isi2/data/HomesDisc.csv")
View(houses)
houses_train = read.table(file = "http://www.isi-stats.com/isi2/data/HomesDisc.csv",
header = T, sep = ",")
houses_test = read.table(file = "http://www.isi-stats.com/isi2/data/HomeValid.csv",
header = T, sep = ",")
houses_test = read.table(file = "http://www.isi-stats.com/isi2/data/HomesValid.csv",
header = T, sep = ",")
houses = read.table(file = "http://www.isi-stats.com/isi2/data/housing.txt",
header = TRUE)
View(houses)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake))
library(tidyverse)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake))
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point()
houses %>%
mutate(price.predict = predict(model_withLake, newdata = .))
model_withLake = lm(price.1000 ~ sqft + lake, data = houses)
summary(model_withLake)
houses %>%
mutate(price.predict = predict(model_withLake, newdata = .))
houses %>%
mutate(price.predict = predict(model_withLake, newdata = .)) -> houses
houses %>%
mutate(price.predict = predict(model_withLake, newdata = .),
residuals = price.1000 - price.predict) -> houses
houses %>%
ggplot(aes(x = sqft, y = price.predict)) +
geom_line() +
geom_point(aes(y = price.1000))
houses %>%
ggplot(aes(x = sqft, y = price.predict, color = lake)) +
geom_line() +
geom_point(aes(y = price.1000))
houses %>% ggplot(aes(x = ,
y = residual,
color = lake)) +
geom_point() + geom_hline(yintercept = 0)
houses %>% ggplot(aes(x = ,
y = residuals,
color = lake)) +
geom_point() + geom_hline(yintercept = 0)
houses %>% ggplot(aes(x = sqft,
y = residuals,
color = lake)) +
geom_point() + geom_hline(yintercept = 0)
houses %>% ggplot(aes(x = price.1000,
y = residuals,
color = lake)) +
geom_point() + geom_hline(yintercept = 0)
coef(lake_model)
lake_model <- lm(price.1000 ~ sqft, data = houses %>% filter(lake == "lakefront"))
coef(lake_model)
nonlake_model <- lm(price.1000 ~ sqft, data = houses %>% filter(lake == "nonlakefront"))
nonlake_model <- lm(price.1000 ~ sqft, data = houses %>% filter(lake == "notlakefront"))
coef(nonlake_model)
model_interaction = lm(price.1000 ~ sqft * lake, data = houses)
summary(model_interaction)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_smooth(method = "lm",
formala = y ~ x) +
geom_point()
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_smooth(method = "lm",
formula = y ~ x) +
geom_point()
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point() +
geom_smooth(aes(sqft, price.1000))
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point() +
geom_smooth(aes(x = sqft, y = price.1000),
method = "lm",
formula = y ~ x)
houses %>%
ggplot(aes(x = sqft, y = price.1000, color = lake)) +
geom_point() +
group_by() %>%
geom_smooth(aes(x = sqft, y = price.1000),
method = "lm",
formula = y ~ x)
houses %>%
ggplot(aes(x = sqft, y = price.1000)) +
geom_point() +
geom_smooth(method = "lm",
se = FALSE)
model_simple <- lm(price.1000 ~ sqft, data = houses)
summary(model_simple)
diamonds = read.table(file = "http://www.isi-stats.com/isi2/data/diamonds.txt",
header = T)
dim(diamonds)
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
library(tidyverse)
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
model_Clarity = lm(Price..1000s. ~ Clarity, data = diamonds)
summary(model_Clarity)
diamonds %>%
mutate(Clarity = factor(Clarity,
levels = c("IV", "VVS1", "VVS2", "VS1", "VS2")))
diamonds <- diamonds %>%
mutate(Clarity = factor(Clarity,
levels = c("IV", "VVS1", "VVS2", "VS1", "VS2")))
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
diamonds = read.table(file = "http://www.isi-stats.com/isi2/data/diamonds.txt",
header = T)
diamonds <- diamonds %>%
mutate(Clarity = factor(Clarity,
levels = c("IF", "VVS1", "VVS2", "VS1", "VS2")))
diamonds %>% ggplot(aes(x = Clarity, y = Price..1000s.)) +
geom_point()
model_Clarity = lm(Price..1000s. ~ Clarity, data = diamonds)
summary(model_Clarity)
diamonds %>%
group_by(Clarity) %>%
summarize(mean = mean(Price..1000s.),
sd = sd(Price..1000s.),
n = n())
head(diamonds)
diamonds %>%
group_by(Clarity) %>%
summarize(mean = mean(Carat),
sd = sd(Carat),
n = n())
model_ClarityWeight = lm(Price..1000s. ~ Carat + Clarity, data = diamonds)
summary(model_ClarityWeight)
model_ClarityWeight = lm(Price..1000s. ~ Carat + Clarity, data = diamonds)
summary(model_ClarityWeight)
anova(model_ClarityWeight)
diamonds = diamonds %>%
mutate(predicted2 = predict(model_ClarityWeight, diamonds))
diamonds %>% ggplot(aes(x = Carat, y = Price..1000s., color = Clarity)) +
geom_point() + geom_line(aes(y = predicted2))
library(Lahman)
Batting %>%
inner_join(Master, by = "playerID") %>%
group_by(playerID) %>%
filter(debut >= "1940-01-01") %>%
filter(debut <= "1945-12-31") %>%
group_by(playerID) %>%
summarize(N = n(), totalAB = sum(AB)) %>%
filter(totalAB >= 2000) %>%
arrange(desc(totalAB)) %>%
select(playerID) -> twothousandold
twothousandold
Batting %>%
inner_join(Master, by = "playerID") %>%
group_by(playerID) %>%
filter(debut >= "1970-01-01") %>%
filter(debut <= "1975-12-31") %>%
group_by(playerID) %>%
summarize(N = n(), totalAB = sum(AB)) %>%
filter(totalAB >= 2000) %>%
arrange(desc(totalAB)) %>%
select(playerID) -> twothousandnew
twothousandold %>%
map_df(get_stats) -> player.statsold
